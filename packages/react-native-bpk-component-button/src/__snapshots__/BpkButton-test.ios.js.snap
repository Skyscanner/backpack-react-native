// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`iOS BpkButton dark mode should render correctly 1`] = `
<View
  accessibilityLabel="Lorem ipsum"
  accessibilityRole="button"
  accessibilityStates={Array []}
  accessible={true}
  clickable={true}
  onClick={[Function]}
  onResponderGrant={[Function]}
  onResponderMove={[Function]}
  onResponderRelease={[Function]}
  onResponderTerminate={[Function]}
  onResponderTerminationRequest={[Function]}
  onStartShouldSetResponder={[Function]}
  style={null}
>
  <View
    colors={
      Array [
        "rgb(0, 166, 152)",
        "rgb(0, 166, 152)",
      ]
    }
    style={
      Array [
        Object {
          "alignItems": "center",
          "flexDirection": "row",
          "justifyContent": "center",
          "paddingHorizontal": 12,
          "paddingVertical": 8,
        },
        null,
        Object {
          "borderRadius": 4,
        },
        Object {
          "flexDirection": "row-reverse",
        },
      ]
    }
  >
    <Text
      maxFontSizeMultiplier={3.2}
      style={
        Array [
          Object {
            "color": "rgb(255, 255, 255)",
            "fontFamily": "System",
            "fontSize": 14,
            "fontWeight": "400",
            "letterSpacing": 0.154,
          },
          Object {
            "fontWeight": "600",
          },
          Object {
            "color": "rgb(255, 255, 255)",
          },
        ]
      }
    >
      Lorem ipsum
    </Text>
  </View>
  <View
    style={
      Array [
        Object {
          "backgroundColor": "rgb(255, 255, 255)",
          "bottom": 0,
          "flex": 1,
          "left": 0,
          "opacity": 0,
          "position": "absolute",
          "right": 0,
          "top": 0,
        },
        Object {
          "borderRadius": 4,
        },
      ]
    }
  />
</View>
`;

exports[`iOS BpkButton dark mode should render correctly with type="destructive" 1`] = `
<View
  accessibilityLabel="Lorem ipsum"
  accessibilityRole="button"
  accessibilityStates={Array []}
  accessible={true}
  clickable={true}
  onClick={[Function]}
  onResponderGrant={[Function]}
  onResponderMove={[Function]}
  onResponderRelease={[Function]}
  onResponderTerminate={[Function]}
  onResponderTerminationRequest={[Function]}
  onStartShouldSetResponder={[Function]}
  style={null}
>
  <View
    style={
      Array [
        Object {
          "alignItems": "center",
          "borderWidth": 2,
          "flexDirection": "row",
          "justifyContent": "center",
          "paddingHorizontal": 10,
          "paddingVertical": 6,
        },
        null,
        Object {
          "backgroundColor": "rgb(44, 44, 46)",
          "borderColor": "rgb(104, 105, 127)",
          "borderRadius": 4,
        },
        Object {
          "flexDirection": "row-reverse",
        },
      ]
    }
  >
    <Text
      maxFontSizeMultiplier={3.2}
      style={
        Array [
          Object {
            "color": "rgb(255, 255, 255)",
            "fontFamily": "System",
            "fontSize": 14,
            "fontWeight": "400",
            "letterSpacing": 0.154,
          },
          Object {
            "fontWeight": "600",
          },
          Object {
            "color": "rgb(209, 67, 91)",
          },
        ]
      }
    >
      Lorem ipsum
    </Text>
  </View>
  <View
    style={
      Array [
        Object {
          "backgroundColor": "rgb(255, 255, 255)",
          "bottom": 0,
          "flex": 1,
          "left": 0,
          "opacity": 0,
          "position": "absolute",
          "right": 0,
          "top": 0,
        },
        Object {
          "borderRadius": 4,
        },
        Object {
          "borderColor": "rgb(104, 105, 127)",
          "borderWidth": 2,
        },
      ]
    }
  />
</View>
`;

exports[`iOS BpkButton dark mode should render correctly with type="destructive" and disabled 1`] = `
<View
  accessibilityLabel="Lorem ipsum"
  accessibilityRole="button"
  accessibilityStates={
    Array [
      "disabled",
    ]
  }
  accessible={true}
  clickable={true}
  onClick={[Function]}
  onResponderGrant={[Function]}
  onResponderMove={[Function]}
  onResponderRelease={[Function]}
  onResponderTerminate={[Function]}
  onResponderTerminationRequest={[Function]}
  onStartShouldSetResponder={[Function]}
  style={null}
>
  <View
    style={
      Array [
        Object {
          "alignItems": "center",
          "borderWidth": 2,
          "flexDirection": "row",
          "justifyContent": "center",
          "paddingHorizontal": 10,
          "paddingVertical": 6,
        },
        null,
        Object {
          "backgroundColor": "rgb(44, 44, 46)",
          "borderColor": "rgb(44, 44, 46)",
          "borderRadius": 4,
        },
        Object {
          "flexDirection": "row-reverse",
        },
      ]
    }
  >
    <Text
      maxFontSizeMultiplier={3.2}
      style={
        Array [
          Object {
            "color": "rgb(255, 255, 255)",
            "fontFamily": "System",
            "fontSize": 14,
            "fontWeight": "400",
            "letterSpacing": 0.154,
          },
          Object {
            "fontWeight": "600",
          },
          Object {
            "color": "rgb(99, 99, 102)",
          },
        ]
      }
    >
      Lorem ipsum
    </Text>
  </View>
  <View
    style={
      Array [
        Object {
          "backgroundColor": "rgb(255, 255, 255)",
          "bottom": 0,
          "flex": 1,
          "left": 0,
          "opacity": 0,
          "position": "absolute",
          "right": 0,
          "top": 0,
        },
        Object {
          "borderRadius": 4,
        },
        Object {
          "borderColor": "rgb(44, 44, 46)",
          "borderWidth": 2,
        },
      ]
    }
  />
</View>
`;

exports[`iOS BpkButton dark mode should render correctly with type="featured" 1`] = `
<View
  accessibilityLabel="Lorem ipsum"
  accessibilityRole="button"
  accessibilityStates={Array []}
  accessible={true}
  clickable={true}
  onClick={[Function]}
  onResponderGrant={[Function]}
  onResponderMove={[Function]}
  onResponderRelease={[Function]}
  onResponderTerminate={[Function]}
  onResponderTerminationRequest={[Function]}
  onStartShouldSetResponder={[Function]}
  style={null}
>
  <View
    colors={
      Array [
        "rgb(7, 112, 227)",
        "rgb(7, 112, 227)",
      ]
    }
    style={
      Array [
        Object {
          "alignItems": "center",
          "flexDirection": "row",
          "justifyContent": "center",
          "paddingHorizontal": 12,
          "paddingVertical": 8,
        },
        null,
        Object {
          "borderRadius": 4,
        },
        Object {
          "flexDirection": "row-reverse",
        },
      ]
    }
  >
    <Text
      maxFontSizeMultiplier={3.2}
      style={
        Array [
          Object {
            "color": "rgb(255, 255, 255)",
            "fontFamily": "System",
            "fontSize": 14,
            "fontWeight": "400",
            "letterSpacing": 0.154,
          },
          Object {
            "fontWeight": "600",
          },
          Object {
            "color": "rgb(255, 255, 255)",
          },
        ]
      }
    >
      Lorem ipsum
    </Text>
  </View>
  <View
    style={
      Array [
        Object {
          "backgroundColor": "rgb(255, 255, 255)",
          "bottom": 0,
          "flex": 1,
          "left": 0,
          "opacity": 0,
          "position": "absolute",
          "right": 0,
          "top": 0,
        },
        Object {
          "borderRadius": 4,
        },
      ]
    }
  />
</View>
`;

exports[`iOS BpkButton dark mode should render correctly with type="featured" and disabled 1`] = `
<View
  accessibilityLabel="Lorem ipsum"
  accessibilityRole="button"
  accessibilityStates={
    Array [
      "disabled",
    ]
  }
  accessible={true}
  clickable={true}
  onClick={[Function]}
  onResponderGrant={[Function]}
  onResponderMove={[Function]}
  onResponderRelease={[Function]}
  onResponderTerminate={[Function]}
  onResponderTerminationRequest={[Function]}
  onStartShouldSetResponder={[Function]}
  style={null}
>
  <View
    colors={
      Array [
        "rgb(44, 44, 46)",
        "rgb(44, 44, 46)",
      ]
    }
    style={
      Array [
        Object {
          "alignItems": "center",
          "flexDirection": "row",
          "justifyContent": "center",
          "paddingHorizontal": 12,
          "paddingVertical": 8,
        },
        null,
        Object {
          "borderRadius": 4,
        },
        Object {
          "flexDirection": "row-reverse",
        },
      ]
    }
  >
    <Text
      maxFontSizeMultiplier={3.2}
      style={
        Array [
          Object {
            "color": "rgb(255, 255, 255)",
            "fontFamily": "System",
            "fontSize": 14,
            "fontWeight": "400",
            "letterSpacing": 0.154,
          },
          Object {
            "fontWeight": "600",
          },
          Object {
            "color": "rgb(99, 99, 102)",
          },
        ]
      }
    >
      Lorem ipsum
    </Text>
  </View>
  <View
    style={
      Array [
        Object {
          "backgroundColor": "rgb(255, 255, 255)",
          "bottom": 0,
          "flex": 1,
          "left": 0,
          "opacity": 0,
          "position": "absolute",
          "right": 0,
          "top": 0,
        },
        Object {
          "borderRadius": 4,
        },
      ]
    }
  />
</View>
`;

exports[`iOS BpkButton dark mode should render correctly with type="primary" 1`] = `
<View
  accessibilityLabel="Lorem ipsum"
  accessibilityRole="button"
  accessibilityStates={Array []}
  accessible={true}
  clickable={true}
  onClick={[Function]}
  onResponderGrant={[Function]}
  onResponderMove={[Function]}
  onResponderRelease={[Function]}
  onResponderTerminate={[Function]}
  onResponderTerminationRequest={[Function]}
  onStartShouldSetResponder={[Function]}
  style={null}
>
  <View
    colors={
      Array [
        "rgb(0, 166, 152)",
        "rgb(0, 166, 152)",
      ]
    }
    style={
      Array [
        Object {
          "alignItems": "center",
          "flexDirection": "row",
          "justifyContent": "center",
          "paddingHorizontal": 12,
          "paddingVertical": 8,
        },
        null,
        Object {
          "borderRadius": 4,
        },
        Object {
          "flexDirection": "row-reverse",
        },
      ]
    }
  >
    <Text
      maxFontSizeMultiplier={3.2}
      style={
        Array [
          Object {
            "color": "rgb(255, 255, 255)",
            "fontFamily": "System",
            "fontSize": 14,
            "fontWeight": "400",
            "letterSpacing": 0.154,
          },
          Object {
            "fontWeight": "600",
          },
          Object {
            "color": "rgb(255, 255, 255)",
          },
        ]
      }
    >
      Lorem ipsum
    </Text>
  </View>
  <View
    style={
      Array [
        Object {
          "backgroundColor": "rgb(255, 255, 255)",
          "bottom": 0,
          "flex": 1,
          "left": 0,
          "opacity": 0,
          "position": "absolute",
          "right": 0,
          "top": 0,
        },
        Object {
          "borderRadius": 4,
        },
      ]
    }
  />
</View>
`;

exports[`iOS BpkButton dark mode should render correctly with type="primary" and disabled 1`] = `
<View
  accessibilityLabel="Lorem ipsum"
  accessibilityRole="button"
  accessibilityStates={
    Array [
      "disabled",
    ]
  }
  accessible={true}
  clickable={true}
  onClick={[Function]}
  onResponderGrant={[Function]}
  onResponderMove={[Function]}
  onResponderRelease={[Function]}
  onResponderTerminate={[Function]}
  onResponderTerminationRequest={[Function]}
  onStartShouldSetResponder={[Function]}
  style={null}
>
  <View
    colors={
      Array [
        "rgb(44, 44, 46)",
        "rgb(44, 44, 46)",
      ]
    }
    style={
      Array [
        Object {
          "alignItems": "center",
          "flexDirection": "row",
          "justifyContent": "center",
          "paddingHorizontal": 12,
          "paddingVertical": 8,
        },
        null,
        Object {
          "borderRadius": 4,
        },
        Object {
          "flexDirection": "row-reverse",
        },
      ]
    }
  >
    <Text
      maxFontSizeMultiplier={3.2}
      style={
        Array [
          Object {
            "color": "rgb(255, 255, 255)",
            "fontFamily": "System",
            "fontSize": 14,
            "fontWeight": "400",
            "letterSpacing": 0.154,
          },
          Object {
            "fontWeight": "600",
          },
          Object {
            "color": "rgb(99, 99, 102)",
          },
        ]
      }
    >
      Lorem ipsum
    </Text>
  </View>
  <View
    style={
      Array [
        Object {
          "backgroundColor": "rgb(255, 255, 255)",
          "bottom": 0,
          "flex": 1,
          "left": 0,
          "opacity": 0,
          "position": "absolute",
          "right": 0,
          "top": 0,
        },
        Object {
          "borderRadius": 4,
        },
      ]
    }
  />
</View>
`;

exports[`iOS BpkButton dark mode should render correctly with type="secondary" 1`] = `
<View
  accessibilityLabel="Lorem ipsum"
  accessibilityRole="button"
  accessibilityStates={Array []}
  accessible={true}
  clickable={true}
  onClick={[Function]}
  onResponderGrant={[Function]}
  onResponderMove={[Function]}
  onResponderRelease={[Function]}
  onResponderTerminate={[Function]}
  onResponderTerminationRequest={[Function]}
  onStartShouldSetResponder={[Function]}
  style={null}
>
  <View
    style={
      Array [
        Object {
          "alignItems": "center",
          "borderWidth": 2,
          "flexDirection": "row",
          "justifyContent": "center",
          "paddingHorizontal": 10,
          "paddingVertical": 6,
        },
        null,
        Object {
          "backgroundColor": "rgb(44, 44, 46)",
          "borderColor": "rgb(104, 105, 127)",
          "borderRadius": 4,
        },
        Object {
          "flexDirection": "row-reverse",
        },
      ]
    }
  >
    <Text
      maxFontSizeMultiplier={3.2}
      style={
        Array [
          Object {
            "color": "rgb(255, 255, 255)",
            "fontFamily": "System",
            "fontSize": 14,
            "fontWeight": "400",
            "letterSpacing": 0.154,
          },
          Object {
            "fontWeight": "600",
          },
          Object {
            "color": "rgb(109, 159, 235)",
          },
        ]
      }
    >
      Lorem ipsum
    </Text>
  </View>
  <View
    style={
      Array [
        Object {
          "backgroundColor": "rgb(255, 255, 255)",
          "bottom": 0,
          "flex": 1,
          "left": 0,
          "opacity": 0,
          "position": "absolute",
          "right": 0,
          "top": 0,
        },
        Object {
          "borderRadius": 4,
        },
        Object {
          "borderColor": "rgb(104, 105, 127)",
          "borderWidth": 2,
        },
      ]
    }
  />
</View>
`;

exports[`iOS BpkButton dark mode should render correctly with type="secondary" and disabled 1`] = `
<View
  accessibilityLabel="Lorem ipsum"
  accessibilityRole="button"
  accessibilityStates={
    Array [
      "disabled",
    ]
  }
  accessible={true}
  clickable={true}
  onClick={[Function]}
  onResponderGrant={[Function]}
  onResponderMove={[Function]}
  onResponderRelease={[Function]}
  onResponderTerminate={[Function]}
  onResponderTerminationRequest={[Function]}
  onStartShouldSetResponder={[Function]}
  style={null}
>
  <View
    style={
      Array [
        Object {
          "alignItems": "center",
          "borderWidth": 2,
          "flexDirection": "row",
          "justifyContent": "center",
          "paddingHorizontal": 10,
          "paddingVertical": 6,
        },
        null,
        Object {
          "backgroundColor": "rgb(44, 44, 46)",
          "borderColor": "rgb(44, 44, 46)",
          "borderRadius": 4,
        },
        Object {
          "flexDirection": "row-reverse",
        },
      ]
    }
  >
    <Text
      maxFontSizeMultiplier={3.2}
      style={
        Array [
          Object {
            "color": "rgb(255, 255, 255)",
            "fontFamily": "System",
            "fontSize": 14,
            "fontWeight": "400",
            "letterSpacing": 0.154,
          },
          Object {
            "fontWeight": "600",
          },
          Object {
            "color": "rgb(99, 99, 102)",
          },
        ]
      }
    >
      Lorem ipsum
    </Text>
  </View>
  <View
    style={
      Array [
        Object {
          "backgroundColor": "rgb(255, 255, 255)",
          "bottom": 0,
          "flex": 1,
          "left": 0,
          "opacity": 0,
          "position": "absolute",
          "right": 0,
          "top": 0,
        },
        Object {
          "borderRadius": 4,
        },
        Object {
          "borderColor": "rgb(44, 44, 46)",
          "borderWidth": 2,
        },
      ]
    }
  />
</View>
`;

exports[`iOS BpkButton dark mode should support overwriting styles 1`] = `
<View
  accessibilityLabel="Lorem ipsum"
  accessibilityRole="button"
  accessibilityStates={Array []}
  accessible={true}
  clickable={true}
  onClick={[Function]}
  onResponderGrant={[Function]}
  onResponderMove={[Function]}
  onResponderRelease={[Function]}
  onResponderTerminate={[Function]}
  onResponderTerminationRequest={[Function]}
  onStartShouldSetResponder={[Function]}
  style={
    Object {
      "width": 4,
    }
  }
>
  <View
    colors={
      Array [
        "rgb(0, 166, 152)",
        "rgb(0, 166, 152)",
      ]
    }
    style={
      Array [
        Object {
          "alignItems": "center",
          "flexDirection": "row",
          "justifyContent": "center",
          "paddingHorizontal": 12,
          "paddingVertical": 8,
        },
        null,
        Object {
          "borderRadius": 4,
        },
        Object {
          "flexDirection": "row-reverse",
        },
      ]
    }
  >
    <Text
      maxFontSizeMultiplier={3.2}
      style={
        Array [
          Object {
            "color": "rgb(255, 255, 255)",
            "fontFamily": "System",
            "fontSize": 14,
            "fontWeight": "400",
            "letterSpacing": 0.154,
          },
          Object {
            "fontWeight": "600",
          },
          Object {
            "color": "rgb(255, 255, 255)",
          },
        ]
      }
    >
      Lorem ipsum
    </Text>
  </View>
  <View
    style={
      Array [
        Object {
          "backgroundColor": "rgb(255, 255, 255)",
          "bottom": 0,
          "flex": 1,
          "left": 0,
          "opacity": 0,
          "position": "absolute",
          "right": 0,
          "top": 0,
        },
        Object {
          "borderRadius": 4,
        },
      ]
    }
  />
</View>
`;

exports[`iOS BpkButton dark mode should support the "disabled" property 1`] = `
<View
  accessibilityLabel="Lorem ipsum"
  accessibilityRole="button"
  accessibilityStates={
    Array [
      "disabled",
    ]
  }
  accessible={true}
  clickable={true}
  onClick={[Function]}
  onResponderGrant={[Function]}
  onResponderMove={[Function]}
  onResponderRelease={[Function]}
  onResponderTerminate={[Function]}
  onResponderTerminationRequest={[Function]}
  onStartShouldSetResponder={[Function]}
  style={null}
>
  <View
    colors={
      Array [
        "rgb(44, 44, 46)",
        "rgb(44, 44, 46)",
      ]
    }
    style={
      Array [
        Object {
          "alignItems": "center",
          "flexDirection": "row",
          "justifyContent": "center",
          "paddingHorizontal": 12,
          "paddingVertical": 8,
        },
        null,
        Object {
          "borderRadius": 4,
        },
        Object {
          "flexDirection": "row-reverse",
        },
      ]
    }
  >
    <Text
      maxFontSizeMultiplier={3.2}
      style={
        Array [
          Object {
            "color": "rgb(255, 255, 255)",
            "fontFamily": "System",
            "fontSize": 14,
            "fontWeight": "400",
            "letterSpacing": 0.154,
          },
          Object {
            "fontWeight": "600",
          },
          Object {
            "color": "rgb(99, 99, 102)",
          },
        ]
      }
    >
      Lorem ipsum
    </Text>
  </View>
  <View
    style={
      Array [
        Object {
          "backgroundColor": "rgb(255, 255, 255)",
          "bottom": 0,
          "flex": 1,
          "left": 0,
          "opacity": 0,
          "position": "absolute",
          "right": 0,
          "top": 0,
        },
        Object {
          "borderRadius": 4,
        },
      ]
    }
  />
</View>
`;

exports[`iOS BpkButton light mode should render correctly 1`] = `
<View
  accessibilityLabel="Lorem ipsum"
  accessibilityRole="button"
  accessibilityStates={Array []}
  accessible={true}
  clickable={true}
  onClick={[Function]}
  onResponderGrant={[Function]}
  onResponderMove={[Function]}
  onResponderRelease={[Function]}
  onResponderTerminate={[Function]}
  onResponderTerminationRequest={[Function]}
  onStartShouldSetResponder={[Function]}
  style={null}
>
  <View
    colors={
      Array [
        "rgb(0, 166, 152)",
        "rgb(0, 166, 152)",
      ]
    }
    style={
      Array [
        Object {
          "alignItems": "center",
          "flexDirection": "row",
          "justifyContent": "center",
          "paddingHorizontal": 12,
          "paddingVertical": 8,
        },
        null,
        Object {
          "borderRadius": 4,
        },
        Object {
          "flexDirection": "row-reverse",
        },
      ]
    }
  >
    <Text
      maxFontSizeMultiplier={3.2}
      style={
        Array [
          Object {
            "color": "rgb(17, 18, 54)",
            "fontFamily": "System",
            "fontSize": 14,
            "fontWeight": "400",
            "letterSpacing": 0.154,
          },
          Object {
            "fontWeight": "600",
          },
          Object {
            "color": "rgb(255, 255, 255)",
          },
        ]
      }
    >
      Lorem ipsum
    </Text>
  </View>
  <View
    style={
      Array [
        Object {
          "backgroundColor": "rgb(17, 18, 54)",
          "bottom": 0,
          "flex": 1,
          "left": 0,
          "opacity": 0,
          "position": "absolute",
          "right": 0,
          "top": 0,
        },
        Object {
          "borderRadius": 4,
        },
      ]
    }
  />
</View>
`;

exports[`iOS BpkButton light mode should render correctly with type="destructive" 1`] = `
<View
  accessibilityLabel="Lorem ipsum"
  accessibilityRole="button"
  accessibilityStates={Array []}
  accessible={true}
  clickable={true}
  onClick={[Function]}
  onResponderGrant={[Function]}
  onResponderMove={[Function]}
  onResponderRelease={[Function]}
  onResponderTerminate={[Function]}
  onResponderTerminationRequest={[Function]}
  onStartShouldSetResponder={[Function]}
  style={null}
>
  <View
    style={
      Array [
        Object {
          "alignItems": "center",
          "borderWidth": 2,
          "flexDirection": "row",
          "justifyContent": "center",
          "paddingHorizontal": 10,
          "paddingVertical": 6,
        },
        null,
        Object {
          "backgroundColor": "rgb(255, 255, 255)",
          "borderColor": "rgb(221, 221, 229)",
          "borderRadius": 4,
        },
        Object {
          "flexDirection": "row-reverse",
        },
      ]
    }
  >
    <Text
      maxFontSizeMultiplier={3.2}
      style={
        Array [
          Object {
            "color": "rgb(17, 18, 54)",
            "fontFamily": "System",
            "fontSize": 14,
            "fontWeight": "400",
            "letterSpacing": 0.154,
          },
          Object {
            "fontWeight": "600",
          },
          Object {
            "color": "rgb(209, 67, 91)",
          },
        ]
      }
    >
      Lorem ipsum
    </Text>
  </View>
  <View
    style={
      Array [
        Object {
          "backgroundColor": "rgb(17, 18, 54)",
          "bottom": 0,
          "flex": 1,
          "left": 0,
          "opacity": 0,
          "position": "absolute",
          "right": 0,
          "top": 0,
        },
        Object {
          "borderRadius": 4,
        },
        Object {
          "borderColor": "rgb(221, 221, 229)",
          "borderWidth": 2,
        },
      ]
    }
  />
</View>
`;

exports[`iOS BpkButton light mode should render correctly with type="destructive" and disabled 1`] = `
<View
  accessibilityLabel="Lorem ipsum"
  accessibilityRole="button"
  accessibilityStates={
    Array [
      "disabled",
    ]
  }
  accessible={true}
  clickable={true}
  onClick={[Function]}
  onResponderGrant={[Function]}
  onResponderMove={[Function]}
  onResponderRelease={[Function]}
  onResponderTerminate={[Function]}
  onResponderTerminationRequest={[Function]}
  onStartShouldSetResponder={[Function]}
  style={null}
>
  <View
    style={
      Array [
        Object {
          "alignItems": "center",
          "borderWidth": 2,
          "flexDirection": "row",
          "justifyContent": "center",
          "paddingHorizontal": 10,
          "paddingVertical": 6,
        },
        null,
        Object {
          "backgroundColor": "rgb(221, 221, 229)",
          "borderColor": "rgb(221, 221, 229)",
          "borderRadius": 4,
        },
        Object {
          "flexDirection": "row-reverse",
        },
      ]
    }
  >
    <Text
      maxFontSizeMultiplier={3.2}
      style={
        Array [
          Object {
            "color": "rgb(17, 18, 54)",
            "fontFamily": "System",
            "fontSize": 14,
            "fontWeight": "400",
            "letterSpacing": 0.154,
          },
          Object {
            "fontWeight": "600",
          },
          Object {
            "color": "rgb(178, 178, 191)",
          },
        ]
      }
    >
      Lorem ipsum
    </Text>
  </View>
  <View
    style={
      Array [
        Object {
          "backgroundColor": "rgb(17, 18, 54)",
          "bottom": 0,
          "flex": 1,
          "left": 0,
          "opacity": 0,
          "position": "absolute",
          "right": 0,
          "top": 0,
        },
        Object {
          "borderRadius": 4,
        },
        Object {
          "borderColor": "rgb(221, 221, 229)",
          "borderWidth": 2,
        },
      ]
    }
  />
</View>
`;

exports[`iOS BpkButton light mode should render correctly with type="featured" 1`] = `
<View
  accessibilityLabel="Lorem ipsum"
  accessibilityRole="button"
  accessibilityStates={Array []}
  accessible={true}
  clickable={true}
  onClick={[Function]}
  onResponderGrant={[Function]}
  onResponderMove={[Function]}
  onResponderRelease={[Function]}
  onResponderTerminate={[Function]}
  onResponderTerminationRequest={[Function]}
  onStartShouldSetResponder={[Function]}
  style={null}
>
  <View
    colors={
      Array [
        "rgb(7, 112, 227)",
        "rgb(7, 112, 227)",
      ]
    }
    style={
      Array [
        Object {
          "alignItems": "center",
          "flexDirection": "row",
          "justifyContent": "center",
          "paddingHorizontal": 12,
          "paddingVertical": 8,
        },
        null,
        Object {
          "borderRadius": 4,
        },
        Object {
          "flexDirection": "row-reverse",
        },
      ]
    }
  >
    <Text
      maxFontSizeMultiplier={3.2}
      style={
        Array [
          Object {
            "color": "rgb(17, 18, 54)",
            "fontFamily": "System",
            "fontSize": 14,
            "fontWeight": "400",
            "letterSpacing": 0.154,
          },
          Object {
            "fontWeight": "600",
          },
          Object {
            "color": "rgb(255, 255, 255)",
          },
        ]
      }
    >
      Lorem ipsum
    </Text>
  </View>
  <View
    style={
      Array [
        Object {
          "backgroundColor": "rgb(17, 18, 54)",
          "bottom": 0,
          "flex": 1,
          "left": 0,
          "opacity": 0,
          "position": "absolute",
          "right": 0,
          "top": 0,
        },
        Object {
          "borderRadius": 4,
        },
      ]
    }
  />
</View>
`;

exports[`iOS BpkButton light mode should render correctly with type="featured" and disabled 1`] = `
<View
  accessibilityLabel="Lorem ipsum"
  accessibilityRole="button"
  accessibilityStates={
    Array [
      "disabled",
    ]
  }
  accessible={true}
  clickable={true}
  onClick={[Function]}
  onResponderGrant={[Function]}
  onResponderMove={[Function]}
  onResponderRelease={[Function]}
  onResponderTerminate={[Function]}
  onResponderTerminationRequest={[Function]}
  onStartShouldSetResponder={[Function]}
  style={null}
>
  <View
    colors={
      Array [
        "rgb(221, 221, 229)",
        "rgb(221, 221, 229)",
      ]
    }
    style={
      Array [
        Object {
          "alignItems": "center",
          "flexDirection": "row",
          "justifyContent": "center",
          "paddingHorizontal": 12,
          "paddingVertical": 8,
        },
        null,
        Object {
          "borderRadius": 4,
        },
        Object {
          "flexDirection": "row-reverse",
        },
      ]
    }
  >
    <Text
      maxFontSizeMultiplier={3.2}
      style={
        Array [
          Object {
            "color": "rgb(17, 18, 54)",
            "fontFamily": "System",
            "fontSize": 14,
            "fontWeight": "400",
            "letterSpacing": 0.154,
          },
          Object {
            "fontWeight": "600",
          },
          Object {
            "color": "rgb(178, 178, 191)",
          },
        ]
      }
    >
      Lorem ipsum
    </Text>
  </View>
  <View
    style={
      Array [
        Object {
          "backgroundColor": "rgb(17, 18, 54)",
          "bottom": 0,
          "flex": 1,
          "left": 0,
          "opacity": 0,
          "position": "absolute",
          "right": 0,
          "top": 0,
        },
        Object {
          "borderRadius": 4,
        },
      ]
    }
  />
</View>
`;

exports[`iOS BpkButton light mode should render correctly with type="primary" 1`] = `
<View
  accessibilityLabel="Lorem ipsum"
  accessibilityRole="button"
  accessibilityStates={Array []}
  accessible={true}
  clickable={true}
  onClick={[Function]}
  onResponderGrant={[Function]}
  onResponderMove={[Function]}
  onResponderRelease={[Function]}
  onResponderTerminate={[Function]}
  onResponderTerminationRequest={[Function]}
  onStartShouldSetResponder={[Function]}
  style={null}
>
  <View
    colors={
      Array [
        "rgb(0, 166, 152)",
        "rgb(0, 166, 152)",
      ]
    }
    style={
      Array [
        Object {
          "alignItems": "center",
          "flexDirection": "row",
          "justifyContent": "center",
          "paddingHorizontal": 12,
          "paddingVertical": 8,
        },
        null,
        Object {
          "borderRadius": 4,
        },
        Object {
          "flexDirection": "row-reverse",
        },
      ]
    }
  >
    <Text
      maxFontSizeMultiplier={3.2}
      style={
        Array [
          Object {
            "color": "rgb(17, 18, 54)",
            "fontFamily": "System",
            "fontSize": 14,
            "fontWeight": "400",
            "letterSpacing": 0.154,
          },
          Object {
            "fontWeight": "600",
          },
          Object {
            "color": "rgb(255, 255, 255)",
          },
        ]
      }
    >
      Lorem ipsum
    </Text>
  </View>
  <View
    style={
      Array [
        Object {
          "backgroundColor": "rgb(17, 18, 54)",
          "bottom": 0,
          "flex": 1,
          "left": 0,
          "opacity": 0,
          "position": "absolute",
          "right": 0,
          "top": 0,
        },
        Object {
          "borderRadius": 4,
        },
      ]
    }
  />
</View>
`;

exports[`iOS BpkButton light mode should render correctly with type="primary" and disabled 1`] = `
<View
  accessibilityLabel="Lorem ipsum"
  accessibilityRole="button"
  accessibilityStates={
    Array [
      "disabled",
    ]
  }
  accessible={true}
  clickable={true}
  onClick={[Function]}
  onResponderGrant={[Function]}
  onResponderMove={[Function]}
  onResponderRelease={[Function]}
  onResponderTerminate={[Function]}
  onResponderTerminationRequest={[Function]}
  onStartShouldSetResponder={[Function]}
  style={null}
>
  <View
    colors={
      Array [
        "rgb(221, 221, 229)",
        "rgb(221, 221, 229)",
      ]
    }
    style={
      Array [
        Object {
          "alignItems": "center",
          "flexDirection": "row",
          "justifyContent": "center",
          "paddingHorizontal": 12,
          "paddingVertical": 8,
        },
        null,
        Object {
          "borderRadius": 4,
        },
        Object {
          "flexDirection": "row-reverse",
        },
      ]
    }
  >
    <Text
      maxFontSizeMultiplier={3.2}
      style={
        Array [
          Object {
            "color": "rgb(17, 18, 54)",
            "fontFamily": "System",
            "fontSize": 14,
            "fontWeight": "400",
            "letterSpacing": 0.154,
          },
          Object {
            "fontWeight": "600",
          },
          Object {
            "color": "rgb(178, 178, 191)",
          },
        ]
      }
    >
      Lorem ipsum
    </Text>
  </View>
  <View
    style={
      Array [
        Object {
          "backgroundColor": "rgb(17, 18, 54)",
          "bottom": 0,
          "flex": 1,
          "left": 0,
          "opacity": 0,
          "position": "absolute",
          "right": 0,
          "top": 0,
        },
        Object {
          "borderRadius": 4,
        },
      ]
    }
  />
</View>
`;

exports[`iOS BpkButton light mode should render correctly with type="secondary" 1`] = `
<View
  accessibilityLabel="Lorem ipsum"
  accessibilityRole="button"
  accessibilityStates={Array []}
  accessible={true}
  clickable={true}
  onClick={[Function]}
  onResponderGrant={[Function]}
  onResponderMove={[Function]}
  onResponderRelease={[Function]}
  onResponderTerminate={[Function]}
  onResponderTerminationRequest={[Function]}
  onStartShouldSetResponder={[Function]}
  style={null}
>
  <View
    style={
      Array [
        Object {
          "alignItems": "center",
          "borderWidth": 2,
          "flexDirection": "row",
          "justifyContent": "center",
          "paddingHorizontal": 10,
          "paddingVertical": 6,
        },
        null,
        Object {
          "backgroundColor": "rgb(255, 255, 255)",
          "borderColor": "rgb(221, 221, 229)",
          "borderRadius": 4,
        },
        Object {
          "flexDirection": "row-reverse",
        },
      ]
    }
  >
    <Text
      maxFontSizeMultiplier={3.2}
      style={
        Array [
          Object {
            "color": "rgb(17, 18, 54)",
            "fontFamily": "System",
            "fontSize": 14,
            "fontWeight": "400",
            "letterSpacing": 0.154,
          },
          Object {
            "fontWeight": "600",
          },
          Object {
            "color": "rgb(7, 112, 227)",
          },
        ]
      }
    >
      Lorem ipsum
    </Text>
  </View>
  <View
    style={
      Array [
        Object {
          "backgroundColor": "rgb(17, 18, 54)",
          "bottom": 0,
          "flex": 1,
          "left": 0,
          "opacity": 0,
          "position": "absolute",
          "right": 0,
          "top": 0,
        },
        Object {
          "borderRadius": 4,
        },
        Object {
          "borderColor": "rgb(221, 221, 229)",
          "borderWidth": 2,
        },
      ]
    }
  />
</View>
`;

exports[`iOS BpkButton light mode should render correctly with type="secondary" and disabled 1`] = `
<View
  accessibilityLabel="Lorem ipsum"
  accessibilityRole="button"
  accessibilityStates={
    Array [
      "disabled",
    ]
  }
  accessible={true}
  clickable={true}
  onClick={[Function]}
  onResponderGrant={[Function]}
  onResponderMove={[Function]}
  onResponderRelease={[Function]}
  onResponderTerminate={[Function]}
  onResponderTerminationRequest={[Function]}
  onStartShouldSetResponder={[Function]}
  style={null}
>
  <View
    style={
      Array [
        Object {
          "alignItems": "center",
          "borderWidth": 2,
          "flexDirection": "row",
          "justifyContent": "center",
          "paddingHorizontal": 10,
          "paddingVertical": 6,
        },
        null,
        Object {
          "backgroundColor": "rgb(221, 221, 229)",
          "borderColor": "rgb(221, 221, 229)",
          "borderRadius": 4,
        },
        Object {
          "flexDirection": "row-reverse",
        },
      ]
    }
  >
    <Text
      maxFontSizeMultiplier={3.2}
      style={
        Array [
          Object {
            "color": "rgb(17, 18, 54)",
            "fontFamily": "System",
            "fontSize": 14,
            "fontWeight": "400",
            "letterSpacing": 0.154,
          },
          Object {
            "fontWeight": "600",
          },
          Object {
            "color": "rgb(178, 178, 191)",
          },
        ]
      }
    >
      Lorem ipsum
    </Text>
  </View>
  <View
    style={
      Array [
        Object {
          "backgroundColor": "rgb(17, 18, 54)",
          "bottom": 0,
          "flex": 1,
          "left": 0,
          "opacity": 0,
          "position": "absolute",
          "right": 0,
          "top": 0,
        },
        Object {
          "borderRadius": 4,
        },
        Object {
          "borderColor": "rgb(221, 221, 229)",
          "borderWidth": 2,
        },
      ]
    }
  />
</View>
`;

exports[`iOS BpkButton light mode should support overwriting styles 1`] = `
<View
  accessibilityLabel="Lorem ipsum"
  accessibilityRole="button"
  accessibilityStates={Array []}
  accessible={true}
  clickable={true}
  onClick={[Function]}
  onResponderGrant={[Function]}
  onResponderMove={[Function]}
  onResponderRelease={[Function]}
  onResponderTerminate={[Function]}
  onResponderTerminationRequest={[Function]}
  onStartShouldSetResponder={[Function]}
  style={
    Object {
      "width": 4,
    }
  }
>
  <View
    colors={
      Array [
        "rgb(0, 166, 152)",
        "rgb(0, 166, 152)",
      ]
    }
    style={
      Array [
        Object {
          "alignItems": "center",
          "flexDirection": "row",
          "justifyContent": "center",
          "paddingHorizontal": 12,
          "paddingVertical": 8,
        },
        null,
        Object {
          "borderRadius": 4,
        },
        Object {
          "flexDirection": "row-reverse",
        },
      ]
    }
  >
    <Text
      maxFontSizeMultiplier={3.2}
      style={
        Array [
          Object {
            "color": "rgb(17, 18, 54)",
            "fontFamily": "System",
            "fontSize": 14,
            "fontWeight": "400",
            "letterSpacing": 0.154,
          },
          Object {
            "fontWeight": "600",
          },
          Object {
            "color": "rgb(255, 255, 255)",
          },
        ]
      }
    >
      Lorem ipsum
    </Text>
  </View>
  <View
    style={
      Array [
        Object {
          "backgroundColor": "rgb(17, 18, 54)",
          "bottom": 0,
          "flex": 1,
          "left": 0,
          "opacity": 0,
          "position": "absolute",
          "right": 0,
          "top": 0,
        },
        Object {
          "borderRadius": 4,
        },
      ]
    }
  />
</View>
`;

exports[`iOS BpkButton light mode should support the "disabled" property 1`] = `
<View
  accessibilityLabel="Lorem ipsum"
  accessibilityRole="button"
  accessibilityStates={
    Array [
      "disabled",
    ]
  }
  accessible={true}
  clickable={true}
  onClick={[Function]}
  onResponderGrant={[Function]}
  onResponderMove={[Function]}
  onResponderRelease={[Function]}
  onResponderTerminate={[Function]}
  onResponderTerminationRequest={[Function]}
  onStartShouldSetResponder={[Function]}
  style={null}
>
  <View
    colors={
      Array [
        "rgb(221, 221, 229)",
        "rgb(221, 221, 229)",
      ]
    }
    style={
      Array [
        Object {
          "alignItems": "center",
          "flexDirection": "row",
          "justifyContent": "center",
          "paddingHorizontal": 12,
          "paddingVertical": 8,
        },
        null,
        Object {
          "borderRadius": 4,
        },
        Object {
          "flexDirection": "row-reverse",
        },
      ]
    }
  >
    <Text
      maxFontSizeMultiplier={3.2}
      style={
        Array [
          Object {
            "color": "rgb(17, 18, 54)",
            "fontFamily": "System",
            "fontSize": 14,
            "fontWeight": "400",
            "letterSpacing": 0.154,
          },
          Object {
            "fontWeight": "600",
          },
          Object {
            "color": "rgb(178, 178, 191)",
          },
        ]
      }
    >
      Lorem ipsum
    </Text>
  </View>
  <View
    style={
      Array [
        Object {
          "backgroundColor": "rgb(17, 18, 54)",
          "bottom": 0,
          "flex": 1,
          "left": 0,
          "opacity": 0,
          "position": "absolute",
          "right": 0,
          "top": 0,
        },
        Object {
          "borderRadius": 4,
        },
      ]
    }
  />
</View>
`;

exports[`iOS BpkButton should render correctly with iconAlignment="leading" 1`] = `
<View
  accessibilityLabel="Lorem ipsum"
  accessibilityRole="button"
  accessibilityStates={Array []}
  accessible={true}
  clickable={true}
  onClick={[Function]}
  onResponderGrant={[Function]}
  onResponderMove={[Function]}
  onResponderRelease={[Function]}
  onResponderTerminate={[Function]}
  onResponderTerminationRequest={[Function]}
  onStartShouldSetResponder={[Function]}
  style={null}
>
  <View
    colors={
      Array [
        "rgb(0, 166, 152)",
        "rgb(0, 166, 152)",
      ]
    }
    style={
      Array [
        Object {
          "alignItems": "center",
          "flexDirection": "row",
          "justifyContent": "center",
          "paddingHorizontal": 12,
          "paddingVertical": 8,
        },
        null,
        Object {
          "borderRadius": 4,
        },
      ]
    }
  >
    <Text
      allowFontScaling={false}
      style={
        Array [
          Object {
            "color": "rgb(68, 69, 96)",
            "fontFamily": "BpkIcon",
            "fontSize": 24,
            "includeFontPadding": false,
          },
          Object {
            "fontSize": 16,
          },
          Array [
            Object {
              "marginEnd": 4,
            },
            Object {
              "color": "rgb(255, 255, 255)",
            },
          ],
        ]
      }
    >
      
    </Text>
    <Text
      maxFontSizeMultiplier={3.2}
      style={
        Array [
          Object {
            "color": "rgb(17, 18, 54)",
            "fontFamily": "System",
            "fontSize": 14,
            "fontWeight": "400",
            "letterSpacing": 0.154,
          },
          Object {
            "fontWeight": "600",
          },
          Object {
            "color": "rgb(255, 255, 255)",
          },
        ]
      }
    >
      Lorem ipsum
    </Text>
  </View>
  <View
    style={
      Array [
        Object {
          "backgroundColor": "rgb(17, 18, 54)",
          "bottom": 0,
          "flex": 1,
          "left": 0,
          "opacity": 0,
          "position": "absolute",
          "right": 0,
          "top": 0,
        },
        Object {
          "borderRadius": 4,
        },
      ]
    }
  />
</View>
`;

exports[`iOS BpkButton should render correctly with iconAlignment="trailing" 1`] = `
<View
  accessibilityLabel="Lorem ipsum"
  accessibilityRole="button"
  accessibilityStates={Array []}
  accessible={true}
  clickable={true}
  onClick={[Function]}
  onResponderGrant={[Function]}
  onResponderMove={[Function]}
  onResponderRelease={[Function]}
  onResponderTerminate={[Function]}
  onResponderTerminationRequest={[Function]}
  onStartShouldSetResponder={[Function]}
  style={null}
>
  <View
    colors={
      Array [
        "rgb(0, 166, 152)",
        "rgb(0, 166, 152)",
      ]
    }
    style={
      Array [
        Object {
          "alignItems": "center",
          "flexDirection": "row",
          "justifyContent": "center",
          "paddingHorizontal": 12,
          "paddingVertical": 8,
        },
        null,
        Object {
          "borderRadius": 4,
        },
        Object {
          "flexDirection": "row-reverse",
        },
      ]
    }
  >
    <Text
      allowFontScaling={false}
      style={
        Array [
          Object {
            "color": "rgb(68, 69, 96)",
            "fontFamily": "BpkIcon",
            "fontSize": 24,
            "includeFontPadding": false,
          },
          Object {
            "fontSize": 16,
          },
          Array [
            Object {
              "marginEnd": 4,
            },
            Object {
              "color": "rgb(255, 255, 255)",
            },
            Object {
              "marginEnd": 0,
              "marginStart": 4,
            },
          ],
        ]
      }
    >
      
    </Text>
    <Text
      maxFontSizeMultiplier={3.2}
      style={
        Array [
          Object {
            "color": "rgb(17, 18, 54)",
            "fontFamily": "System",
            "fontSize": 14,
            "fontWeight": "400",
            "letterSpacing": 0.154,
          },
          Object {
            "fontWeight": "600",
          },
          Object {
            "color": "rgb(255, 255, 255)",
          },
        ]
      }
    >
      Lorem ipsum
    </Text>
  </View>
  <View
    style={
      Array [
        Object {
          "backgroundColor": "rgb(17, 18, 54)",
          "bottom": 0,
          "flex": 1,
          "left": 0,
          "opacity": 0,
          "position": "absolute",
          "right": 0,
          "top": 0,
        },
        Object {
          "borderRadius": 4,
        },
      ]
    }
  />
</View>
`;

exports[`iOS BpkButton should support elements as icons 1`] = `
<View
  accessibilityLabel="Lorem ipsum"
  accessibilityRole="button"
  accessibilityStates={Array []}
  accessible={true}
  clickable={true}
  onClick={[Function]}
  onResponderGrant={[Function]}
  onResponderMove={[Function]}
  onResponderRelease={[Function]}
  onResponderTerminate={[Function]}
  onResponderTerminationRequest={[Function]}
  onStartShouldSetResponder={[Function]}
  style={null}
>
  <View
    colors={
      Array [
        "rgb(0, 166, 152)",
        "rgb(0, 166, 152)",
      ]
    }
    style={
      Array [
        Object {
          "alignItems": "center",
          "flexDirection": "row",
          "justifyContent": "center",
          "paddingHorizontal": 12,
          "paddingVertical": 8,
        },
        null,
        Object {
          "borderRadius": 40,
        },
        Object {
          "flexDirection": "row-reverse",
        },
        Object {
          "paddingHorizontal": 8,
        },
      ]
    }
  >
    <Text
      maxFontSizeMultiplier={3.2}
      style={
        Array [
          Object {
            "color": "rgb(17, 18, 54)",
            "fontFamily": "System",
            "fontSize": 16,
            "fontWeight": "400",
            "letterSpacing": 0.12,
          },
          Object {},
          Array [
            undefined,
            Array [
              Object {
                "marginEnd": 4,
              },
              Object {
                "color": "rgb(255, 255, 255)",
              },
              Object {
                "marginEnd": 0,
                "marginStart": 4,
              },
              Object {
                "marginEnd": 0,
                "marginStart": 0,
              },
            ],
          ],
        ]
      }
    >
      foo
    </Text>
  </View>
  <View
    style={
      Array [
        Object {
          "backgroundColor": "rgb(17, 18, 54)",
          "bottom": 0,
          "flex": 1,
          "left": 0,
          "opacity": 0,
          "position": "absolute",
          "right": 0,
          "top": 0,
        },
        Object {
          "borderRadius": 40,
        },
      ]
    }
  />
</View>
`;

exports[`iOS BpkButton should support having an icon as well as a title 1`] = `
<View
  accessibilityLabel="Lorem ipsum"
  accessibilityRole="button"
  accessibilityStates={Array []}
  accessible={true}
  clickable={true}
  onClick={[Function]}
  onResponderGrant={[Function]}
  onResponderMove={[Function]}
  onResponderRelease={[Function]}
  onResponderTerminate={[Function]}
  onResponderTerminationRequest={[Function]}
  onStartShouldSetResponder={[Function]}
  style={null}
>
  <View
    colors={
      Array [
        "rgb(0, 166, 152)",
        "rgb(0, 166, 152)",
      ]
    }
    style={
      Array [
        Object {
          "alignItems": "center",
          "flexDirection": "row",
          "justifyContent": "center",
          "paddingHorizontal": 12,
          "paddingVertical": 8,
        },
        null,
        Object {
          "borderRadius": 4,
        },
        Object {
          "flexDirection": "row-reverse",
        },
      ]
    }
  >
    <Text
      allowFontScaling={false}
      style={
        Array [
          Object {
            "color": "rgb(68, 69, 96)",
            "fontFamily": "BpkIcon",
            "fontSize": 24,
            "includeFontPadding": false,
          },
          Object {
            "fontSize": 16,
          },
          Array [
            Object {
              "marginEnd": 4,
            },
            Object {
              "color": "rgb(255, 255, 255)",
            },
            Object {
              "marginEnd": 0,
              "marginStart": 4,
            },
          ],
        ]
      }
    >
      
    </Text>
    <Text
      maxFontSizeMultiplier={3.2}
      style={
        Array [
          Object {
            "color": "rgb(17, 18, 54)",
            "fontFamily": "System",
            "fontSize": 14,
            "fontWeight": "400",
            "letterSpacing": 0.154,
          },
          Object {
            "fontWeight": "600",
          },
          Object {
            "color": "rgb(255, 255, 255)",
          },
        ]
      }
    >
      Lorem ipsum
    </Text>
  </View>
  <View
    style={
      Array [
        Object {
          "backgroundColor": "rgb(17, 18, 54)",
          "bottom": 0,
          "flex": 1,
          "left": 0,
          "opacity": 0,
          "position": "absolute",
          "right": 0,
          "top": 0,
        },
        Object {
          "borderRadius": 4,
        },
      ]
    }
  />
</View>
`;

exports[`iOS BpkButton should support the "icon" property 1`] = `
<View
  accessibilityLabel="Lorem ipsum"
  accessibilityRole="button"
  accessibilityStates={Array []}
  accessible={true}
  clickable={true}
  onClick={[Function]}
  onResponderGrant={[Function]}
  onResponderMove={[Function]}
  onResponderRelease={[Function]}
  onResponderTerminate={[Function]}
  onResponderTerminationRequest={[Function]}
  onStartShouldSetResponder={[Function]}
  style={null}
>
  <View
    colors={
      Array [
        "rgb(0, 166, 152)",
        "rgb(0, 166, 152)",
      ]
    }
    style={
      Array [
        Object {
          "alignItems": "center",
          "flexDirection": "row",
          "justifyContent": "center",
          "paddingHorizontal": 12,
          "paddingVertical": 8,
        },
        null,
        Object {
          "borderRadius": 4,
        },
        Object {
          "flexDirection": "row-reverse",
        },
      ]
    }
  >
    <Text
      allowFontScaling={false}
      style={
        Array [
          Object {
            "color": "rgb(68, 69, 96)",
            "fontFamily": "BpkIcon",
            "fontSize": 24,
            "includeFontPadding": false,
          },
          Object {
            "fontSize": 16,
          },
          Array [
            Object {
              "marginEnd": 4,
            },
            Object {
              "color": "rgb(255, 255, 255)",
            },
            Object {
              "marginEnd": 0,
              "marginStart": 4,
            },
          ],
        ]
      }
    >
      
    </Text>
    <Text
      maxFontSizeMultiplier={3.2}
      style={
        Array [
          Object {
            "color": "rgb(17, 18, 54)",
            "fontFamily": "System",
            "fontSize": 14,
            "fontWeight": "400",
            "letterSpacing": 0.154,
          },
          Object {
            "fontWeight": "600",
          },
          Object {
            "color": "rgb(255, 255, 255)",
          },
        ]
      }
    >
      Lorem ipsum
    </Text>
  </View>
  <View
    style={
      Array [
        Object {
          "backgroundColor": "rgb(17, 18, 54)",
          "bottom": 0,
          "flex": 1,
          "left": 0,
          "opacity": 0,
          "position": "absolute",
          "right": 0,
          "top": 0,
        },
        Object {
          "borderRadius": 4,
        },
      ]
    }
  />
</View>
`;

exports[`iOS BpkButton should support the "iconOnly" property 1`] = `
<View
  accessibilityLabel="Lorem ipsum"
  accessibilityRole="button"
  accessibilityStates={Array []}
  accessible={true}
  clickable={true}
  onClick={[Function]}
  onResponderGrant={[Function]}
  onResponderMove={[Function]}
  onResponderRelease={[Function]}
  onResponderTerminate={[Function]}
  onResponderTerminationRequest={[Function]}
  onStartShouldSetResponder={[Function]}
  style={null}
>
  <View
    colors={
      Array [
        "rgb(0, 166, 152)",
        "rgb(0, 166, 152)",
      ]
    }
    style={
      Array [
        Object {
          "alignItems": "center",
          "flexDirection": "row",
          "justifyContent": "center",
          "paddingHorizontal": 12,
          "paddingVertical": 8,
        },
        null,
        Object {
          "borderRadius": 40,
        },
        Object {
          "flexDirection": "row-reverse",
        },
        Object {
          "paddingHorizontal": 8,
        },
      ]
    }
  >
    <Text
      allowFontScaling={false}
      style={
        Array [
          Object {
            "color": "rgb(68, 69, 96)",
            "fontFamily": "BpkIcon",
            "fontSize": 24,
            "includeFontPadding": false,
          },
          Object {
            "fontSize": 16,
          },
          Array [
            Object {
              "marginEnd": 4,
            },
            Object {
              "color": "rgb(255, 255, 255)",
            },
            Object {
              "marginEnd": 0,
              "marginStart": 4,
            },
            Object {
              "marginEnd": 0,
              "marginStart": 0,
            },
          ],
        ]
      }
    >
      
    </Text>
  </View>
  <View
    style={
      Array [
        Object {
          "backgroundColor": "rgb(17, 18, 54)",
          "bottom": 0,
          "flex": 1,
          "left": 0,
          "opacity": 0,
          "position": "absolute",
          "right": 0,
          "top": 0,
        },
        Object {
          "borderRadius": 40,
        },
      ]
    }
  />
</View>
`;

exports[`iOS BpkButtonThemed should not apply border radius when a theme is applied 1`] = `
<View
  accessibilityLabel="Lorem ipsum"
  accessibilityRole="button"
  accessibilityStates={Array []}
  accessible={true}
  clickable={true}
  onClick={[Function]}
  onResponderGrant={[Function]}
  onResponderMove={[Function]}
  onResponderRelease={[Function]}
  onResponderTerminate={[Function]}
  onResponderTerminationRequest={[Function]}
  onStartShouldSetResponder={[Function]}
  style={null}
>
  <View
    colors={
      Array [
        "green",
        "blue",
      ]
    }
    style={
      Array [
        Object {
          "alignItems": "center",
          "flexDirection": "row",
          "justifyContent": "center",
          "paddingHorizontal": 12,
          "paddingVertical": 8,
        },
        null,
        Object {
          "borderRadius": 40,
        },
        Object {
          "flexDirection": "row-reverse",
        },
        Object {
          "paddingHorizontal": 8,
        },
      ]
    }
  >
    <Text
      allowFontScaling={false}
      style={
        Array [
          Object {
            "color": "rgb(68, 69, 96)",
            "fontFamily": "BpkIcon",
            "fontSize": 24,
            "includeFontPadding": false,
          },
          Object {
            "fontSize": 16,
          },
          Array [
            Object {
              "marginEnd": 4,
            },
            Object {
              "color": "red",
            },
            Object {
              "marginEnd": 0,
              "marginStart": 4,
            },
            Object {
              "marginEnd": 0,
              "marginStart": 0,
            },
          ],
        ]
      }
    >
      
    </Text>
  </View>
  <View
    style={
      Array [
        Object {
          "backgroundColor": "rgb(17, 18, 54)",
          "bottom": 0,
          "flex": 1,
          "left": 0,
          "opacity": 0,
          "position": "absolute",
          "right": 0,
          "top": 0,
        },
        Object {
          "borderRadius": 40,
        },
      ]
    }
  />
</View>
`;

exports[`iOS BpkButtonThemed should render correctly 1`] = `
<View
  accessibilityLabel="Lorem ipsum"
  accessibilityRole="button"
  accessibilityStates={Array []}
  accessible={true}
  clickable={true}
  onClick={[Function]}
  onResponderGrant={[Function]}
  onResponderMove={[Function]}
  onResponderRelease={[Function]}
  onResponderTerminate={[Function]}
  onResponderTerminationRequest={[Function]}
  onStartShouldSetResponder={[Function]}
  style={null}
>
  <View
    colors={
      Array [
        "green",
        "blue",
      ]
    }
    style={
      Array [
        Object {
          "alignItems": "center",
          "flexDirection": "row",
          "justifyContent": "center",
          "paddingHorizontal": 12,
          "paddingVertical": 8,
        },
        null,
        Object {
          "borderRadius": 4,
        },
        Object {
          "flexDirection": "row-reverse",
        },
      ]
    }
  >
    <Text
      maxFontSizeMultiplier={3.2}
      style={
        Array [
          Object {
            "color": "rgb(17, 18, 54)",
            "fontFamily": "System",
            "fontSize": 14,
            "fontWeight": "400",
            "letterSpacing": 0.154,
          },
          Object {
            "fontWeight": "600",
          },
          Object {
            "color": "red",
          },
        ]
      }
    >
      Lorem ipsum
    </Text>
  </View>
  <View
    style={
      Array [
        Object {
          "backgroundColor": "rgb(17, 18, 54)",
          "bottom": 0,
          "flex": 1,
          "left": 0,
          "opacity": 0,
          "position": "absolute",
          "right": 0,
          "top": 0,
        },
        Object {
          "borderRadius": 4,
        },
      ]
    }
  />
</View>
`;

exports[`iOS should support the "icon" and "large" property 1`] = `
<View
  accessibilityLabel="Lorem ipsum"
  accessibilityRole="button"
  accessibilityStates={Array []}
  accessible={true}
  clickable={true}
  onClick={[Function]}
  onResponderGrant={[Function]}
  onResponderMove={[Function]}
  onResponderRelease={[Function]}
  onResponderTerminate={[Function]}
  onResponderTerminationRequest={[Function]}
  onStartShouldSetResponder={[Function]}
  style={null}
>
  <View
    colors={
      Array [
        "rgb(0, 166, 152)",
        "rgb(0, 166, 152)",
      ]
    }
    style={
      Array [
        Object {
          "alignItems": "center",
          "flexDirection": "row",
          "justifyContent": "center",
          "paddingHorizontal": 12,
          "paddingVertical": 8,
        },
        Object {
          "paddingHorizontal": 16,
          "paddingVertical": 12,
        },
        Object {
          "borderRadius": 4,
        },
        Object {
          "flexDirection": "row-reverse",
        },
      ]
    }
  >
    <Text
      allowFontScaling={false}
      style={
        Array [
          Object {
            "color": "rgb(68, 69, 96)",
            "fontFamily": "BpkIcon",
            "fontSize": 24,
            "includeFontPadding": false,
          },
          Array [
            Object {
              "marginEnd": 4,
            },
            Object {
              "color": "rgb(255, 255, 255)",
            },
            Object {
              "marginEnd": 0,
              "marginStart": 4,
            },
          ],
        ]
      }
    >
      
    </Text>
    <Text
      maxFontSizeMultiplier={3.2}
      style={
        Array [
          Object {
            "color": "rgb(17, 18, 54)",
            "fontFamily": "System",
            "fontSize": 20,
            "fontWeight": "400",
            "letterSpacing": null,
          },
          Object {
            "fontWeight": "600",
          },
          Object {
            "color": "rgb(255, 255, 255)",
          },
        ]
      }
    >
      Lorem ipsum
    </Text>
  </View>
  <View
    style={
      Array [
        Object {
          "backgroundColor": "rgb(17, 18, 54)",
          "bottom": 0,
          "flex": 1,
          "left": 0,
          "opacity": 0,
          "position": "absolute",
          "right": 0,
          "top": 0,
        },
        Object {
          "borderRadius": 4,
        },
      ]
    }
  />
</View>
`;

exports[`iOS should support the "iconOnly" and "large" property 1`] = `
<View
  accessibilityLabel="Lorem ipsum"
  accessibilityRole="button"
  accessibilityStates={Array []}
  accessible={true}
  clickable={true}
  onClick={[Function]}
  onResponderGrant={[Function]}
  onResponderMove={[Function]}
  onResponderRelease={[Function]}
  onResponderTerminate={[Function]}
  onResponderTerminationRequest={[Function]}
  onStartShouldSetResponder={[Function]}
  style={null}
>
  <View
    colors={
      Array [
        "rgb(0, 166, 152)",
        "rgb(0, 166, 152)",
      ]
    }
    style={
      Array [
        Object {
          "alignItems": "center",
          "flexDirection": "row",
          "justifyContent": "center",
          "paddingHorizontal": 12,
          "paddingVertical": 8,
        },
        Object {
          "paddingHorizontal": 16,
          "paddingVertical": 12,
        },
        Object {
          "borderRadius": 40,
        },
        Object {
          "flexDirection": "row-reverse",
        },
        Object {
          "paddingHorizontal": 12,
        },
      ]
    }
  >
    <Text
      allowFontScaling={false}
      style={
        Array [
          Object {
            "color": "rgb(68, 69, 96)",
            "fontFamily": "BpkIcon",
            "fontSize": 24,
            "includeFontPadding": false,
          },
          Array [
            Object {
              "marginEnd": 4,
            },
            Object {
              "color": "rgb(255, 255, 255)",
            },
            Object {
              "marginEnd": 0,
              "marginStart": 4,
            },
            Object {
              "marginEnd": 0,
              "marginStart": 0,
            },
          ],
        ]
      }
    >
      
    </Text>
  </View>
  <View
    style={
      Array [
        Object {
          "backgroundColor": "rgb(17, 18, 54)",
          "bottom": 0,
          "flex": 1,
          "left": 0,
          "opacity": 0,
          "position": "absolute",
          "right": 0,
          "top": 0,
        },
        Object {
          "borderRadius": 40,
        },
      ]
    }
  />
</View>
`;

exports[`iOS should support the "large" and secondary property 1`] = `
<View
  accessibilityLabel="Lorem ipsum"
  accessibilityRole="button"
  accessibilityStates={Array []}
  accessible={true}
  clickable={true}
  onClick={[Function]}
  onResponderGrant={[Function]}
  onResponderMove={[Function]}
  onResponderRelease={[Function]}
  onResponderTerminate={[Function]}
  onResponderTerminationRequest={[Function]}
  onStartShouldSetResponder={[Function]}
  style={null}
>
  <View
    style={
      Array [
        Object {
          "alignItems": "center",
          "borderWidth": 2,
          "flexDirection": "row",
          "justifyContent": "center",
          "paddingHorizontal": 10,
          "paddingVertical": 6,
        },
        Object {
          "paddingHorizontal": 14,
          "paddingVertical": 10,
        },
        Object {
          "backgroundColor": "rgb(255, 255, 255)",
          "borderColor": "rgb(221, 221, 229)",
          "borderRadius": 4,
        },
        Object {
          "flexDirection": "row-reverse",
        },
      ]
    }
  >
    <Text
      maxFontSizeMultiplier={3.2}
      style={
        Array [
          Object {
            "color": "rgb(17, 18, 54)",
            "fontFamily": "System",
            "fontSize": 20,
            "fontWeight": "400",
            "letterSpacing": null,
          },
          Object {
            "fontWeight": "600",
          },
          Object {
            "color": "rgb(7, 112, 227)",
          },
        ]
      }
    >
      Lorem ipsum
    </Text>
  </View>
  <View
    style={
      Array [
        Object {
          "backgroundColor": "rgb(17, 18, 54)",
          "bottom": 0,
          "flex": 1,
          "left": 0,
          "opacity": 0,
          "position": "absolute",
          "right": 0,
          "top": 0,
        },
        Object {
          "borderRadius": 4,
        },
        Object {
          "borderColor": "rgb(221, 221, 229)",
          "borderWidth": 2,
        },
      ]
    }
  />
</View>
`;

exports[`iOS should support the "large" property 1`] = `
<View
  accessibilityLabel="Lorem ipsum"
  accessibilityRole="button"
  accessibilityStates={Array []}
  accessible={true}
  clickable={true}
  onClick={[Function]}
  onResponderGrant={[Function]}
  onResponderMove={[Function]}
  onResponderRelease={[Function]}
  onResponderTerminate={[Function]}
  onResponderTerminationRequest={[Function]}
  onStartShouldSetResponder={[Function]}
  style={null}
>
  <View
    colors={
      Array [
        "rgb(0, 166, 152)",
        "rgb(0, 166, 152)",
      ]
    }
    style={
      Array [
        Object {
          "alignItems": "center",
          "flexDirection": "row",
          "justifyContent": "center",
          "paddingHorizontal": 12,
          "paddingVertical": 8,
        },
        Object {
          "paddingHorizontal": 16,
          "paddingVertical": 12,
        },
        Object {
          "borderRadius": 4,
        },
        Object {
          "flexDirection": "row-reverse",
        },
      ]
    }
  >
    <Text
      maxFontSizeMultiplier={3.2}
      style={
        Array [
          Object {
            "color": "rgb(17, 18, 54)",
            "fontFamily": "System",
            "fontSize": 20,
            "fontWeight": "400",
            "letterSpacing": null,
          },
          Object {
            "fontWeight": "600",
          },
          Object {
            "color": "rgb(255, 255, 255)",
          },
        ]
      }
    >
      Lorem ipsum
    </Text>
  </View>
  <View
    style={
      Array [
        Object {
          "backgroundColor": "rgb(17, 18, 54)",
          "bottom": 0,
          "flex": 1,
          "left": 0,
          "opacity": 0,
          "position": "absolute",
          "right": 0,
          "top": 0,
        },
        Object {
          "borderRadius": 4,
        },
      ]
    }
  />
</View>
`;
