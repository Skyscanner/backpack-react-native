// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`Android BpkChip should render correctly 1`] = `
<View
  style={
    Array [
      Object {
        "borderRadius": 40,
        "elevation": 2,
        "overflow": "hidden",
      },
      Array [
        null,
      ],
    ]
  }
>
  <View
    accessibilityLabel="Accessibility label"
    accessibilityRole="button"
    accessible={true}
    clickable={true}
    isTVSelectable={true}
    nativeBackgroundAndroid={
      Object {
        "borderless": true,
        "color": null,
        "type": "RippleAndroid",
      }
    }
    onClick={[Function]}
    onResponderGrant={[Function]}
    onResponderMove={[Function]}
    onResponderRelease={[Function]}
    onResponderTerminate={[Function]}
    onResponderTerminationRequest={[Function]}
    onStartShouldSetResponder={[Function]}
    style={
      Array [
        Object {
          "alignItems": "center",
          "backgroundColor": "rgb(255, 255, 255)",
          "borderRadius": 40,
          "flexDirection": "row",
          "justifyContent": "space-between",
          "paddingHorizontal": 16,
          "paddingVertical": 8,
        },
      ]
    }
  >
    <Text
      style={
        Array [
          Object {
            "color": "rgb(17, 18, 54)",
            "fontFamily": "sans-serif",
            "fontSize": 14,
            "fontWeight": "400",
            "letterSpacing": 0,
          },
          Object {},
          Array [
            Object {
              "color": "rgb(68, 69, 96)",
              "includeFontPadding": false,
            },
          ],
        ]
      }
    >
      Label
    </Text>
  </View>
</View>
`;

exports[`Android BpkChip should render correctly with "disabled" 1`] = `
<View
  style={
    Array [
      Object {
        "borderRadius": 40,
        "elevation": 2,
        "overflow": "hidden",
      },
      Array [
        null,
      ],
    ]
  }
>
  <View
    accessibilityLabel="Accessibility label"
    accessibilityRole="button"
    accessible={true}
    clickable={false}
    isTVSelectable={true}
    nativeBackgroundAndroid={
      Object {
        "borderless": true,
        "color": null,
        "type": "RippleAndroid",
      }
    }
    onClick={[Function]}
    onResponderGrant={[Function]}
    onResponderMove={[Function]}
    onResponderRelease={[Function]}
    onResponderTerminate={[Function]}
    onResponderTerminationRequest={[Function]}
    onStartShouldSetResponder={[Function]}
    style={
      Array [
        Object {
          "alignItems": "center",
          "backgroundColor": "rgb(255, 255, 255)",
          "borderRadius": 40,
          "flexDirection": "row",
          "justifyContent": "space-between",
          "paddingHorizontal": 16,
          "paddingVertical": 8,
        },
        Object {
          "backgroundColor": "rgb(255, 255, 255)",
        },
      ]
    }
  >
    <Text
      style={
        Array [
          Object {
            "color": "rgb(17, 18, 54)",
            "fontFamily": "sans-serif",
            "fontSize": 14,
            "fontWeight": "400",
            "letterSpacing": 0,
          },
          Object {},
          Array [
            Object {
              "color": "rgb(68, 69, 96)",
              "includeFontPadding": false,
            },
            Object {
              "color": "rgb(178, 178, 191)",
            },
          ],
        ]
      }
    >
      Label
    </Text>
  </View>
</View>
`;

exports[`Android BpkChip should render correctly with "selected" 1`] = `
<View
  style={
    Array [
      Object {
        "borderRadius": 40,
        "elevation": 2,
        "overflow": "hidden",
      },
      Array [
        null,
      ],
    ]
  }
>
  <View
    accessibilityLabel="Accessibility label"
    accessibilityRole="button"
    accessible={true}
    clickable={true}
    isTVSelectable={true}
    nativeBackgroundAndroid={
      Object {
        "borderless": true,
        "color": null,
        "type": "RippleAndroid",
      }
    }
    onClick={[Function]}
    onResponderGrant={[Function]}
    onResponderMove={[Function]}
    onResponderRelease={[Function]}
    onResponderTerminate={[Function]}
    onResponderTerminationRequest={[Function]}
    onStartShouldSetResponder={[Function]}
    style={
      Array [
        Object {
          "alignItems": "center",
          "backgroundColor": "rgb(255, 255, 255)",
          "borderRadius": 40,
          "flexDirection": "row",
          "justifyContent": "space-between",
          "paddingHorizontal": 16,
          "paddingVertical": 8,
        },
        Object {
          "backgroundColor": "rgb(0, 178, 214)",
        },
      ]
    }
  >
    <Text
      style={
        Array [
          Object {
            "color": "rgb(17, 18, 54)",
            "fontFamily": "sans-serif",
            "fontSize": 14,
            "fontWeight": "400",
            "letterSpacing": 0,
          },
          Object {},
          Array [
            Object {
              "color": "rgb(68, 69, 96)",
              "includeFontPadding": false,
            },
            Object {
              "color": "rgb(255, 255, 255)",
            },
          ],
        ]
      }
    >
      Label
    </Text>
  </View>
</View>
`;

exports[`Android BpkChip should render correctly with arbitrary props 1`] = `
<View
  style={
    Array [
      Object {
        "borderRadius": 40,
        "elevation": 2,
        "overflow": "hidden",
      },
      Array [
        null,
      ],
    ]
  }
>
  <View
    accessibilityLabel="Accessibility label"
    accessibilityRole="button"
    accessible={true}
    clickable={true}
    isTVSelectable={true}
    nativeBackgroundAndroid={
      Object {
        "borderless": true,
        "color": null,
        "type": "RippleAndroid",
      }
    }
    onClick={[Function]}
    onResponderGrant={[Function]}
    onResponderMove={[Function]}
    onResponderRelease={[Function]}
    onResponderTerminate={[Function]}
    onResponderTerminationRequest={[Function]}
    onStartShouldSetResponder={[Function]}
    style={
      Array [
        Object {
          "alignItems": "center",
          "backgroundColor": "rgb(255, 255, 255)",
          "borderRadius": 40,
          "flexDirection": "row",
          "justifyContent": "space-between",
          "paddingHorizontal": 16,
          "paddingVertical": 8,
        },
      ]
    }
    testID="123"
  >
    <Text
      style={
        Array [
          Object {
            "color": "rgb(17, 18, 54)",
            "fontFamily": "sans-serif",
            "fontSize": 14,
            "fontWeight": "400",
            "letterSpacing": 0,
          },
          Object {},
          Array [
            Object {
              "color": "rgb(68, 69, 96)",
              "includeFontPadding": false,
            },
          ],
        ]
      }
    >
      Label
    </Text>
  </View>
</View>
`;

exports[`Android BpkChip should render correctly with custom style 1`] = `
<View
  style={
    Array [
      Object {
        "borderRadius": 40,
        "elevation": 2,
        "overflow": "hidden",
      },
      Array [
        Object {
          "flex": 1,
        },
      ],
    ]
  }
>
  <View
    accessibilityLabel="Accessibility label"
    accessibilityRole="button"
    accessible={true}
    clickable={true}
    isTVSelectable={true}
    nativeBackgroundAndroid={
      Object {
        "borderless": true,
        "color": null,
        "type": "RippleAndroid",
      }
    }
    onClick={[Function]}
    onResponderGrant={[Function]}
    onResponderMove={[Function]}
    onResponderRelease={[Function]}
    onResponderTerminate={[Function]}
    onResponderTerminationRequest={[Function]}
    onStartShouldSetResponder={[Function]}
    style={
      Array [
        Object {
          "alignItems": "center",
          "backgroundColor": "rgb(255, 255, 255)",
          "borderRadius": 40,
          "flexDirection": "row",
          "justifyContent": "space-between",
          "paddingHorizontal": 16,
          "paddingVertical": 8,
        },
      ]
    }
  >
    <Text
      style={
        Array [
          Object {
            "color": "rgb(17, 18, 54)",
            "fontFamily": "sans-serif",
            "fontSize": 14,
            "fontWeight": "400",
            "letterSpacing": 0,
          },
          Object {},
          Array [
            Object {
              "color": "rgb(68, 69, 96)",
              "includeFontPadding": false,
            },
          ],
        ]
      }
    >
      Label
    </Text>
  </View>
</View>
`;

exports[`Android BpkChip should render outline correctly 1`] = `
<View
  style={
    Array [
      Object {
        "borderRadius": 40,
        "elevation": 2,
        "overflow": "hidden",
      },
      Array [
        null,
        Object {
          "elevation": 0,
        },
      ],
    ]
  }
>
  <View
    accessibilityLabel="Accessibility label"
    accessibilityRole="button"
    accessible={true}
    clickable={true}
    isTVSelectable={true}
    nativeBackgroundAndroid={
      Object {
        "borderless": true,
        "color": null,
        "type": "RippleAndroid",
      }
    }
    onClick={[Function]}
    onResponderGrant={[Function]}
    onResponderMove={[Function]}
    onResponderRelease={[Function]}
    onResponderTerminate={[Function]}
    onResponderTerminationRequest={[Function]}
    onStartShouldSetResponder={[Function]}
    style={
      Array [
        Object {
          "alignItems": "center",
          "backgroundColor": "rgb(255, 255, 255)",
          "borderRadius": 40,
          "flexDirection": "row",
          "justifyContent": "space-between",
          "paddingHorizontal": 16,
          "paddingVertical": 8,
        },
        Object {
          "backgroundColor": "transparent",
          "borderColor": "rgb(178, 178, 191)",
          "borderWidth": 1,
          "paddingVertical": 7,
        },
      ]
    }
  >
    <Text
      style={
        Array [
          Object {
            "color": "rgb(17, 18, 54)",
            "fontFamily": "sans-serif",
            "fontSize": 14,
            "fontWeight": "400",
            "letterSpacing": 0,
          },
          Object {},
          Array [
            Object {
              "color": "rgb(68, 69, 96)",
              "includeFontPadding": false,
            },
            Object {
              "color": "rgb(178, 178, 191)",
            },
          ],
        ]
      }
    >
      Label
    </Text>
  </View>
</View>
`;

exports[`Android BpkChip should support theming when selected 1`] = `
<View
  style={
    Array [
      Object {
        "borderRadius": 40,
        "elevation": 2,
        "overflow": "hidden",
      },
      Array [
        null,
      ],
    ]
  }
>
  <View
    accessibilityLabel="Accessibility label"
    accessibilityRole="button"
    accessible={true}
    clickable={true}
    isTVSelectable={true}
    nativeBackgroundAndroid={
      Object {
        "borderless": true,
        "color": null,
        "type": "RippleAndroid",
      }
    }
    onClick={[Function]}
    onResponderGrant={[Function]}
    onResponderMove={[Function]}
    onResponderRelease={[Function]}
    onResponderTerminate={[Function]}
    onResponderTerminationRequest={[Function]}
    onStartShouldSetResponder={[Function]}
    style={
      Array [
        Object {
          "alignItems": "center",
          "backgroundColor": "rgb(255, 255, 255)",
          "borderRadius": 40,
          "flexDirection": "row",
          "justifyContent": "space-between",
          "paddingHorizontal": 16,
          "paddingVertical": 8,
        },
        Object {
          "backgroundColor": "rgb(0, 178, 214)",
        },
        Object {
          "backgroundColor": "red",
        },
      ]
    }
  >
    <Text
      style={
        Array [
          Object {
            "color": "rgb(17, 18, 54)",
            "fontFamily": "sans-serif",
            "fontSize": 14,
            "fontWeight": "400",
            "letterSpacing": 0,
          },
          Object {},
          Object {
            "fontFamily": "System",
          },
          Array [
            Object {
              "color": "rgb(68, 69, 96)",
              "includeFontPadding": false,
            },
            Object {
              "color": "rgb(255, 255, 255)",
            },
            Object {
              "color": "yellow",
            },
          ],
        ]
      }
    >
      Label
    </Text>
  </View>
</View>
`;
