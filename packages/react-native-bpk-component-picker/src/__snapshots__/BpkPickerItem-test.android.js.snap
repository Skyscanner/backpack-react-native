// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`Android BpkPickerItem should render correctly 1`] = `
<View
  accessibilityComponentType="button"
  accessibilityLabel="label"
  accessibilityTraits={
    Array [
      "button",
    ]
  }
  accessible={true}
  hasTVPreferredFocus={undefined}
  hitSlop={undefined}
  isTVSelectable={true}
  nativeBackgroundAndroid={
    Object {
      "attribute": "selectableItemBackground",
      "type": "ThemeAttrAndroid",
    }
  }
  onLayout={undefined}
  onResponderGrant={[Function]}
  onResponderMove={[Function]}
  onResponderRelease={[Function]}
  onResponderTerminate={[Function]}
  onResponderTerminationRequest={[Function]}
  onStartShouldSetResponder={[Function]}
  style={
    Object {
      "padding": 16,
    }
  }
  testID={undefined}
>
  <Text
    accessible={true}
    allowFontScaling={true}
    ellipsizeMode="tail"
    style={
      Array [
        Object {
          "color": "rgb(82, 76, 97)",
          "fontFamily": "sans-serif",
          "fontSize": 16,
          "fontWeight": "400",
          "letterSpacing": -0.2,
        },
        Object {},
        Object {},
      ]
    }
  >
    label
  </Text>
</View>
`;

exports[`Android BpkPickerItem should render correctly with an onPress function 1`] = `
<View
  accessibilityComponentType="button"
  accessibilityLabel="label"
  accessibilityTraits={
    Array [
      "button",
    ]
  }
  accessible={true}
  hasTVPreferredFocus={undefined}
  hitSlop={undefined}
  isTVSelectable={true}
  nativeBackgroundAndroid={
    Object {
      "attribute": "selectableItemBackground",
      "type": "ThemeAttrAndroid",
    }
  }
  onLayout={undefined}
  onResponderGrant={[Function]}
  onResponderMove={[Function]}
  onResponderRelease={[Function]}
  onResponderTerminate={[Function]}
  onResponderTerminationRequest={[Function]}
  onStartShouldSetResponder={[Function]}
  style={
    Object {
      "padding": 16,
    }
  }
  testID={undefined}
>
  <Text
    accessible={true}
    allowFontScaling={true}
    ellipsizeMode="tail"
    style={
      Array [
        Object {
          "color": "rgb(82, 76, 97)",
          "fontFamily": "sans-serif",
          "fontSize": 16,
          "fontWeight": "400",
          "letterSpacing": -0.2,
        },
        Object {},
        Object {},
      ]
    }
  >
    label
  </Text>
</View>
`;

exports[`Android BpkPickerItem should render correctly with the selected prop 1`] = `
<View
  accessibilityComponentType="button"
  accessibilityLabel="label"
  accessibilityTraits={
    Array [
      "button",
      "selected",
    ]
  }
  accessible={true}
  hasTVPreferredFocus={undefined}
  hitSlop={undefined}
  isTVSelectable={true}
  nativeBackgroundAndroid={
    Object {
      "attribute": "selectableItemBackground",
      "type": "ThemeAttrAndroid",
    }
  }
  onLayout={undefined}
  onResponderGrant={[Function]}
  onResponderMove={[Function]}
  onResponderRelease={[Function]}
  onResponderTerminate={[Function]}
  onResponderTerminationRequest={[Function]}
  onStartShouldSetResponder={[Function]}
  style={
    Object {
      "padding": 16,
    }
  }
  testID={undefined}
>
  <Text
    accessible={true}
    allowFontScaling={true}
    ellipsizeMode="tail"
    style={
      Array [
        Object {
          "color": "rgb(82, 76, 97)",
          "fontFamily": "sans-serif",
          "fontSize": 16,
          "fontWeight": "400",
          "letterSpacing": -0.2,
        },
        Object {},
        Object {
          "color": "rgb(0, 178, 214)",
        },
      ]
    }
  >
    label
  </Text>
</View>
`;
