// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`Android BpkPicker should render correctly 1`] = `
<Modal
  animationType="fade"
  hardwareAccelerated={false}
  onRequestClose={[Function]}
  transparent={true}
  visible={false}
>
  <View
    accessible={true}
    clickable={true}
    onClick={[Function]}
    onResponderGrant={[Function]}
    onResponderMove={[Function]}
    onResponderRelease={[Function]}
    onResponderTerminate={[Function]}
    onResponderTerminationRequest={[Function]}
    onStartShouldSetResponder={[Function]}
    style={
      Object {
        "backgroundColor": "rgba(17, 18, 54, 0.8)",
        "height": "100%",
        "left": 0,
        "position": "absolute",
        "top": 0,
        "width": "100%",
      }
    }
  />
  <View
    style={
      Object {
        "alignItems": "center",
        "flexDirection": "row",
        "height": "100%",
        "justifyContent": "center",
        "padding": 16,
        "width": "100%",
      }
    }
  >
    <RCTScrollView
      data={
        Array [
          Object {
            "index": 0,
            "label": "foo",
            "selected": false,
            "value": "foo",
          },
          Object {
            "index": 1,
            "label": "bar",
            "selected": false,
            "value": "bar",
          },
        ]
      }
      disableVirtualization={false}
      getItem={[Function]}
      getItemCount={[Function]}
      getItemLayout={[Function]}
      horizontal={false}
      initialNumToRender={6}
      initialScrollIndex={0}
      keyExtractor={[Function]}
      maxToRenderPerBatch={10}
      numColumns={1}
      onContentSizeChange={[Function]}
      onEndReachedThreshold={2}
      onLayout={[Function]}
      onMomentumScrollEnd={[Function]}
      onScroll={[Function]}
      onScrollBeginDrag={[Function]}
      onScrollEndDrag={[Function]}
      removeClippedSubviews={true}
      renderItem={[Function]}
      scrollEventThrottle={50}
      stickyHeaderIndices={Array []}
      style={
        Array [
          Object {
            "backgroundColor": "rgb(255, 255, 255)",
            "borderRadius": 4,
            "elevation": 5,
          },
          Object {
            "maxHeight": 102,
          },
        ]
      }
      updateCellsBatchingPeriod={50}
      viewabilityConfigCallbackPairs={Array []}
      windowSize={21}
    >
      <View>
        <View
          style={null}
        >
          <View
            accessibilityLabel="foo"
            accessibilityRole="button"
            accessibilityStates={Array []}
            accessible={true}
            clickable={true}
            isTVSelectable={true}
            nativeBackgroundAndroid={
              Object {
                "borderless": false,
                "color": null,
                "type": "RippleAndroid",
              }
            }
            onClick={[Function]}
            onResponderGrant={[Function]}
            onResponderMove={[Function]}
            onResponderRelease={[Function]}
            onResponderTerminate={[Function]}
            onResponderTerminationRequest={[Function]}
            onStartShouldSetResponder={[Function]}
            style={
              Object {
                "padding": 16,
              }
            }
          >
            <Text
              style={
                Array [
                  Object {
                    "color": "rgb(17, 18, 54)",
                    "fontFamily": "sans-serif",
                    "fontSize": 16,
                    "fontWeight": "400",
                    "letterSpacing": -0.2,
                  },
                  Object {},
                  Object {},
                ]
              }
            >
              foo
            </Text>
          </View>
        </View>
        <View
          style={null}
        >
          <View
            accessibilityLabel="bar"
            accessibilityRole="button"
            accessibilityStates={Array []}
            accessible={true}
            clickable={true}
            isTVSelectable={true}
            nativeBackgroundAndroid={
              Object {
                "borderless": false,
                "color": null,
                "type": "RippleAndroid",
              }
            }
            onClick={[Function]}
            onResponderGrant={[Function]}
            onResponderMove={[Function]}
            onResponderRelease={[Function]}
            onResponderTerminate={[Function]}
            onResponderTerminationRequest={[Function]}
            onStartShouldSetResponder={[Function]}
            style={
              Object {
                "padding": 16,
              }
            }
          >
            <Text
              style={
                Array [
                  Object {
                    "color": "rgb(17, 18, 54)",
                    "fontFamily": "sans-serif",
                    "fontSize": 16,
                    "fontWeight": "400",
                    "letterSpacing": -0.2,
                  },
                  Object {},
                  Object {},
                ]
              }
            >
              bar
            </Text>
          </View>
        </View>
      </View>
    </RCTScrollView>
  </View>
</Modal>
`;

exports[`Android BpkPicker should render correctly with a selected value 1`] = `
<Modal
  animationType="fade"
  hardwareAccelerated={false}
  onRequestClose={[Function]}
  transparent={true}
  visible={false}
>
  <View
    accessible={true}
    clickable={true}
    onClick={[Function]}
    onResponderGrant={[Function]}
    onResponderMove={[Function]}
    onResponderRelease={[Function]}
    onResponderTerminate={[Function]}
    onResponderTerminationRequest={[Function]}
    onStartShouldSetResponder={[Function]}
    style={
      Object {
        "backgroundColor": "rgba(17, 18, 54, 0.8)",
        "height": "100%",
        "left": 0,
        "position": "absolute",
        "top": 0,
        "width": "100%",
      }
    }
  />
  <View
    style={
      Object {
        "alignItems": "center",
        "flexDirection": "row",
        "height": "100%",
        "justifyContent": "center",
        "padding": 16,
        "width": "100%",
      }
    }
  >
    <RCTScrollView
      data={
        Array [
          Object {
            "index": 0,
            "label": "foo",
            "selected": true,
            "value": "foo",
          },
          Object {
            "index": 1,
            "label": "bar",
            "selected": false,
            "value": "bar",
          },
        ]
      }
      disableVirtualization={false}
      getItem={[Function]}
      getItemCount={[Function]}
      getItemLayout={[Function]}
      horizontal={false}
      initialNumToRender={6}
      initialScrollIndex={0}
      keyExtractor={[Function]}
      maxToRenderPerBatch={10}
      numColumns={1}
      onContentSizeChange={[Function]}
      onEndReachedThreshold={2}
      onLayout={[Function]}
      onMomentumScrollEnd={[Function]}
      onScroll={[Function]}
      onScrollBeginDrag={[Function]}
      onScrollEndDrag={[Function]}
      removeClippedSubviews={true}
      renderItem={[Function]}
      scrollEventThrottle={50}
      stickyHeaderIndices={Array []}
      style={
        Array [
          Object {
            "backgroundColor": "rgb(255, 255, 255)",
            "borderRadius": 4,
            "elevation": 5,
          },
          Object {
            "maxHeight": 102,
          },
        ]
      }
      updateCellsBatchingPeriod={50}
      viewabilityConfigCallbackPairs={Array []}
      windowSize={21}
    >
      <View>
        <View
          style={null}
        >
          <View
            accessibilityLabel="foo"
            accessibilityRole="button"
            accessibilityStates={
              Array [
                "selected",
              ]
            }
            accessible={true}
            clickable={true}
            isTVSelectable={true}
            nativeBackgroundAndroid={
              Object {
                "borderless": false,
                "color": null,
                "type": "RippleAndroid",
              }
            }
            onClick={[Function]}
            onResponderGrant={[Function]}
            onResponderMove={[Function]}
            onResponderRelease={[Function]}
            onResponderTerminate={[Function]}
            onResponderTerminationRequest={[Function]}
            onStartShouldSetResponder={[Function]}
            style={
              Object {
                "padding": 16,
              }
            }
          >
            <Text
              style={
                Array [
                  Object {
                    "color": "rgb(17, 18, 54)",
                    "fontFamily": "sans-serif",
                    "fontSize": 16,
                    "fontWeight": "400",
                    "letterSpacing": -0.2,
                  },
                  Object {},
                  Object {
                    "color": "rgb(0, 178, 214)",
                  },
                ]
              }
            >
              foo
            </Text>
          </View>
        </View>
        <View
          style={null}
        >
          <View
            accessibilityLabel="bar"
            accessibilityRole="button"
            accessibilityStates={Array []}
            accessible={true}
            clickable={true}
            isTVSelectable={true}
            nativeBackgroundAndroid={
              Object {
                "borderless": false,
                "color": null,
                "type": "RippleAndroid",
              }
            }
            onClick={[Function]}
            onResponderGrant={[Function]}
            onResponderMove={[Function]}
            onResponderRelease={[Function]}
            onResponderTerminate={[Function]}
            onResponderTerminationRequest={[Function]}
            onStartShouldSetResponder={[Function]}
            style={
              Object {
                "padding": 16,
              }
            }
          >
            <Text
              style={
                Array [
                  Object {
                    "color": "rgb(17, 18, 54)",
                    "fontFamily": "sans-serif",
                    "fontSize": 16,
                    "fontWeight": "400",
                    "letterSpacing": -0.2,
                  },
                  Object {},
                  Object {},
                ]
              }
            >
              bar
            </Text>
          </View>
        </View>
      </View>
    </RCTScrollView>
  </View>
</Modal>
`;
