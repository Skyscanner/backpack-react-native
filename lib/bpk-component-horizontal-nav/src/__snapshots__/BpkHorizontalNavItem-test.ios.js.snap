// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`iOS BpkHorizontalNavItem dark mode should render correctly 1`] = `
<View
  accessibilityLabel="Nav"
  accessibilityRole="button"
  accessible={true}
  focusable={true}
  onClick={[Function]}
  onResponderGrant={[Function]}
  onResponderMove={[Function]}
  onResponderRelease={[Function]}
  onResponderTerminate={[Function]}
  onResponderTerminationRequest={[Function]}
  onStartShouldSetResponder={[Function]}
  style={null}
>
  <View
    style={
      Array [
        Object {
          "height": 33,
          "justifyContent": "center",
        },
      ]
    }
  >
    <Text
      allowFontScaling={false}
      style={
        Array [
          Object {
            "color": "rgb(255, 255, 255)",
            "fontFamily": "System",
            "fontSize": 16,
            "fontWeight": "400",
            "letterSpacing": 0.12,
            "textAlign": "left",
          },
          Object {},
          Array [
            Object {
              "paddingHorizontal": 16,
            },
          ],
        ]
      }
    >
      Nav
    </Text>
  </View>
  <View
    style={
      Array [
        Object {
          "backgroundColor": "rgb(255, 255, 255)",
          "bottom": 0,
          "flex": 1,
          "left": 0,
          "opacity": 0,
          "position": "absolute",
          "right": 0,
          "top": 0,
        },
      ]
    }
  />
</View>
`;

exports[`iOS BpkHorizontalNavItem dark mode should render correctly with "disabled" prop 1`] = `
<View
  accessibilityLabel="Nav"
  accessibilityRole="button"
  accessible={true}
  focusable={true}
  onClick={[Function]}
  onResponderGrant={[Function]}
  onResponderMove={[Function]}
  onResponderRelease={[Function]}
  onResponderTerminate={[Function]}
  onResponderTerminationRequest={[Function]}
  onStartShouldSetResponder={[Function]}
  style={null}
>
  <View
    style={
      Array [
        Object {
          "height": 33,
          "justifyContent": "center",
        },
      ]
    }
  >
    <Text
      allowFontScaling={false}
      style={
        Array [
          Object {
            "color": "rgb(255, 255, 255)",
            "fontFamily": "System",
            "fontSize": 16,
            "fontWeight": "400",
            "letterSpacing": 0.12,
            "textAlign": "left",
          },
          Object {},
          Array [
            Object {
              "paddingHorizontal": 16,
            },
            Object {
              "color": "rgb(99, 99, 102)",
            },
          ],
        ]
      }
    >
      Nav
    </Text>
  </View>
  <View
    style={
      Array [
        Object {
          "backgroundColor": "rgb(255, 255, 255)",
          "bottom": 0,
          "flex": 1,
          "left": 0,
          "opacity": 0,
          "position": "absolute",
          "right": 0,
          "top": 0,
        },
      ]
    }
  />
</View>
`;

exports[`iOS BpkHorizontalNavItem dark mode should render correctly with "selected" prop 1`] = `
<View
  accessibilityLabel="Nav"
  accessibilityRole="button"
  accessible={true}
  focusable={true}
  onClick={[Function]}
  onResponderGrant={[Function]}
  onResponderMove={[Function]}
  onResponderRelease={[Function]}
  onResponderTerminate={[Function]}
  onResponderTerminationRequest={[Function]}
  onStartShouldSetResponder={[Function]}
  style={null}
>
  <View
    style={
      Array [
        Object {
          "height": 33,
          "justifyContent": "center",
        },
      ]
    }
  >
    <Text
      allowFontScaling={false}
      style={
        Array [
          Object {
            "color": "rgb(255, 255, 255)",
            "fontFamily": "System",
            "fontSize": 16,
            "fontWeight": "400",
            "letterSpacing": 0.12,
            "textAlign": "left",
          },
          Object {},
          Array [
            Object {
              "paddingHorizontal": 16,
            },
            Object {
              "color": "rgb(109, 159, 235)",
            },
          ],
        ]
      }
    >
      Nav
    </Text>
  </View>
  <View
    style={
      Array [
        Object {
          "backgroundColor": "rgb(255, 255, 255)",
          "bottom": 0,
          "flex": 1,
          "left": 0,
          "opacity": 0,
          "position": "absolute",
          "right": 0,
          "top": 0,
        },
      ]
    }
  />
</View>
`;

exports[`iOS BpkHorizontalNavItem light mode should render correctly 1`] = `
<View
  accessibilityLabel="Nav"
  accessibilityRole="button"
  accessible={true}
  focusable={true}
  onClick={[Function]}
  onResponderGrant={[Function]}
  onResponderMove={[Function]}
  onResponderRelease={[Function]}
  onResponderTerminate={[Function]}
  onResponderTerminationRequest={[Function]}
  onStartShouldSetResponder={[Function]}
  style={null}
>
  <View
    style={
      Array [
        Object {
          "height": 33,
          "justifyContent": "center",
        },
      ]
    }
  >
    <Text
      allowFontScaling={false}
      style={
        Array [
          Object {
            "color": "rgb(17, 18, 54)",
            "fontFamily": "System",
            "fontSize": 16,
            "fontWeight": "400",
            "letterSpacing": 0.12,
            "textAlign": "left",
          },
          Object {},
          Array [
            Object {
              "paddingHorizontal": 16,
            },
          ],
        ]
      }
    >
      Nav
    </Text>
  </View>
  <View
    style={
      Array [
        Object {
          "backgroundColor": "rgb(17, 18, 54)",
          "bottom": 0,
          "flex": 1,
          "left": 0,
          "opacity": 0,
          "position": "absolute",
          "right": 0,
          "top": 0,
        },
      ]
    }
  />
</View>
`;

exports[`iOS BpkHorizontalNavItem light mode should render correctly with "disabled" prop 1`] = `
<View
  accessibilityLabel="Nav"
  accessibilityRole="button"
  accessible={true}
  focusable={true}
  onClick={[Function]}
  onResponderGrant={[Function]}
  onResponderMove={[Function]}
  onResponderRelease={[Function]}
  onResponderTerminate={[Function]}
  onResponderTerminationRequest={[Function]}
  onStartShouldSetResponder={[Function]}
  style={null}
>
  <View
    style={
      Array [
        Object {
          "height": 33,
          "justifyContent": "center",
        },
      ]
    }
  >
    <Text
      allowFontScaling={false}
      style={
        Array [
          Object {
            "color": "rgb(17, 18, 54)",
            "fontFamily": "System",
            "fontSize": 16,
            "fontWeight": "400",
            "letterSpacing": 0.12,
            "textAlign": "left",
          },
          Object {},
          Array [
            Object {
              "paddingHorizontal": 16,
            },
            Object {
              "color": "rgb(178, 178, 191)",
            },
          ],
        ]
      }
    >
      Nav
    </Text>
  </View>
  <View
    style={
      Array [
        Object {
          "backgroundColor": "rgb(17, 18, 54)",
          "bottom": 0,
          "flex": 1,
          "left": 0,
          "opacity": 0,
          "position": "absolute",
          "right": 0,
          "top": 0,
        },
      ]
    }
  />
</View>
`;

exports[`iOS BpkHorizontalNavItem light mode should render correctly with "selected" prop 1`] = `
<View
  accessibilityLabel="Nav"
  accessibilityRole="button"
  accessible={true}
  focusable={true}
  onClick={[Function]}
  onResponderGrant={[Function]}
  onResponderMove={[Function]}
  onResponderRelease={[Function]}
  onResponderTerminate={[Function]}
  onResponderTerminationRequest={[Function]}
  onStartShouldSetResponder={[Function]}
  style={null}
>
  <View
    style={
      Array [
        Object {
          "height": 33,
          "justifyContent": "center",
        },
      ]
    }
  >
    <Text
      allowFontScaling={false}
      style={
        Array [
          Object {
            "color": "rgb(17, 18, 54)",
            "fontFamily": "System",
            "fontSize": 16,
            "fontWeight": "400",
            "letterSpacing": 0.12,
            "textAlign": "left",
          },
          Object {},
          Array [
            Object {
              "paddingHorizontal": 16,
            },
            Object {
              "color": "rgb(7, 112, 227)",
            },
          ],
        ]
      }
    >
      Nav
    </Text>
  </View>
  <View
    style={
      Array [
        Object {
          "backgroundColor": "rgb(17, 18, 54)",
          "bottom": 0,
          "flex": 1,
          "left": 0,
          "opacity": 0,
          "position": "absolute",
          "right": 0,
          "top": 0,
        },
      ]
    }
  />
</View>
`;

exports[`iOS BpkHorizontalNavItem should render correctly with "small" prop 1`] = `
<View
  accessibilityLabel="Nav"
  accessibilityRole="button"
  accessible={true}
  focusable={true}
  onClick={[Function]}
  onResponderGrant={[Function]}
  onResponderMove={[Function]}
  onResponderRelease={[Function]}
  onResponderTerminate={[Function]}
  onResponderTerminationRequest={[Function]}
  onStartShouldSetResponder={[Function]}
  style={null}
>
  <View
    style={
      Array [
        Object {
          "height": 33,
          "justifyContent": "center",
        },
        Object {
          "height": 29,
        },
      ]
    }
  >
    <Text
      allowFontScaling={false}
      style={
        Array [
          Object {
            "color": "rgb(17, 18, 54)",
            "fontFamily": "System",
            "fontSize": 14,
            "fontWeight": "400",
            "letterSpacing": 0.154,
            "textAlign": "left",
          },
          Object {},
          Array [
            Object {
              "paddingHorizontal": 16,
            },
          ],
        ]
      }
    >
      Nav
    </Text>
  </View>
  <View
    style={
      Array [
        Object {
          "backgroundColor": "rgb(17, 18, 54)",
          "bottom": 0,
          "flex": 1,
          "left": 0,
          "opacity": 0,
          "position": "absolute",
          "right": 0,
          "top": 0,
        },
      ]
    }
  />
</View>
`;

exports[`iOS BpkHorizontalNavItem should render correctly with "spaceAround" prop 1`] = `
<View
  accessibilityLabel="Nav"
  accessibilityRole="button"
  accessible={true}
  focusable={true}
  onClick={[Function]}
  onResponderGrant={[Function]}
  onResponderMove={[Function]}
  onResponderRelease={[Function]}
  onResponderTerminate={[Function]}
  onResponderTerminationRequest={[Function]}
  onStartShouldSetResponder={[Function]}
  style={null}
>
  <View
    style={
      Array [
        Object {
          "height": 33,
          "justifyContent": "center",
        },
      ]
    }
  >
    <Text
      allowFontScaling={false}
      style={
        Array [
          Object {
            "color": "rgb(17, 18, 54)",
            "fontFamily": "System",
            "fontSize": 16,
            "fontWeight": "400",
            "letterSpacing": 0.12,
            "textAlign": "left",
          },
          Object {},
          Array [
            Object {
              "paddingHorizontal": 16,
            },
          ],
        ]
      }
    >
      Nav
    </Text>
  </View>
  <View
    style={
      Array [
        Object {
          "backgroundColor": "rgb(17, 18, 54)",
          "bottom": 0,
          "flex": 1,
          "left": 0,
          "opacity": 0,
          "position": "absolute",
          "right": 0,
          "top": 0,
        },
      ]
    }
  />
</View>
`;

exports[`iOS BpkHorizontalNavItem should render correctly with arbitrary props 1`] = `
<View
  accessibilityLabel="Nav"
  accessibilityRole="button"
  accessible={true}
  focusable={true}
  onClick={[Function]}
  onResponderGrant={[Function]}
  onResponderMove={[Function]}
  onResponderRelease={[Function]}
  onResponderTerminate={[Function]}
  onResponderTerminationRequest={[Function]}
  onStartShouldSetResponder={[Function]}
  style={null}
>
  <View
    style={
      Array [
        Object {
          "height": 33,
          "justifyContent": "center",
        },
      ]
    }
  >
    <Text
      allowFontScaling={false}
      style={
        Array [
          Object {
            "color": "rgb(17, 18, 54)",
            "fontFamily": "System",
            "fontSize": 16,
            "fontWeight": "400",
            "letterSpacing": 0.12,
            "textAlign": "left",
          },
          Object {},
          Array [
            Object {
              "paddingHorizontal": 16,
            },
          ],
        ]
      }
    >
      Nav
    </Text>
  </View>
  <View
    style={
      Array [
        Object {
          "backgroundColor": "rgb(17, 18, 54)",
          "bottom": 0,
          "flex": 1,
          "left": 0,
          "opacity": 0,
          "position": "absolute",
          "right": 0,
          "top": 0,
        },
      ]
    }
  />
</View>
`;

exports[`iOS BpkHorizontalNavItem should render correctly with custom "style" prop 1`] = `
<View
  accessibilityLabel="Nav"
  accessibilityRole="button"
  accessible={true}
  focusable={true}
  onClick={[Function]}
  onResponderGrant={[Function]}
  onResponderMove={[Function]}
  onResponderRelease={[Function]}
  onResponderTerminate={[Function]}
  onResponderTerminationRequest={[Function]}
  onStartShouldSetResponder={[Function]}
  style={null}
>
  <View
    style={
      Array [
        Object {
          "height": 33,
          "justifyContent": "center",
        },
        Object {
          "marginBottom": 4,
        },
      ]
    }
  >
    <Text
      allowFontScaling={false}
      style={
        Array [
          Object {
            "color": "rgb(17, 18, 54)",
            "fontFamily": "System",
            "fontSize": 16,
            "fontWeight": "400",
            "letterSpacing": 0.12,
            "textAlign": "left",
          },
          Object {},
          Array [
            Object {
              "paddingHorizontal": 16,
            },
          ],
        ]
      }
    >
      Nav
    </Text>
  </View>
  <View
    style={
      Array [
        Object {
          "backgroundColor": "rgb(17, 18, 54)",
          "bottom": 0,
          "flex": 1,
          "left": 0,
          "opacity": 0,
          "position": "absolute",
          "right": 0,
          "top": 0,
        },
      ]
    }
  />
</View>
`;

exports[`iOS BpkHorizontalNavItem should render item text correctly with custom "textStyle" prop 1`] = `
<View
  accessibilityLabel="Nav"
  accessibilityRole="button"
  accessible={true}
  focusable={true}
  onClick={[Function]}
  onResponderGrant={[Function]}
  onResponderMove={[Function]}
  onResponderRelease={[Function]}
  onResponderTerminate={[Function]}
  onResponderTerminationRequest={[Function]}
  onStartShouldSetResponder={[Function]}
  style={null}
>
  <View
    style={
      Array [
        Object {
          "height": 33,
          "justifyContent": "center",
        },
      ]
    }
  >
    <Text
      allowFontScaling={false}
      style={
        Array [
          Object {
            "color": "rgb(17, 18, 54)",
            "fontFamily": "System",
            "fontSize": 16,
            "fontWeight": "400",
            "letterSpacing": 0.12,
            "textAlign": "left",
          },
          Object {},
          Array [
            Object {
              "paddingHorizontal": 16,
            },
            Object {
              "color": "rgb(255, 255, 255)",
            },
          ],
        ]
      }
    >
      Nav
    </Text>
  </View>
  <View
    style={
      Array [
        Object {
          "backgroundColor": "rgb(17, 18, 54)",
          "bottom": 0,
          "flex": 1,
          "left": 0,
          "opacity": 0,
          "position": "absolute",
          "right": 0,
          "top": 0,
        },
      ]
    }
  />
</View>
`;

exports[`iOS BpkHorizontalNavItem should support theming 1`] = `
<View
  accessibilityLabel="Nav"
  accessibilityRole="button"
  accessible={true}
  focusable={true}
  onClick={[Function]}
  onResponderGrant={[Function]}
  onResponderMove={[Function]}
  onResponderRelease={[Function]}
  onResponderTerminate={[Function]}
  onResponderTerminationRequest={[Function]}
  onStartShouldSetResponder={[Function]}
  style={null}
>
  <View
    style={
      Array [
        Object {
          "height": 33,
          "justifyContent": "center",
        },
      ]
    }
  >
    <Text
      allowFontScaling={false}
      style={
        Array [
          Object {
            "color": "rgb(17, 18, 54)",
            "fontFamily": "System",
            "fontSize": 16,
            "fontWeight": "400",
            "letterSpacing": 0.12,
            "textAlign": "left",
          },
          Object {},
          Array [
            Object {
              "paddingHorizontal": 16,
            },
          ],
        ]
      }
    >
      Nav
    </Text>
  </View>
  <View
    style={
      Array [
        Object {
          "backgroundColor": "rgb(17, 18, 54)",
          "bottom": 0,
          "flex": 1,
          "left": 0,
          "opacity": 0,
          "position": "absolute",
          "right": 0,
          "top": 0,
        },
      ]
    }
  />
</View>
`;
