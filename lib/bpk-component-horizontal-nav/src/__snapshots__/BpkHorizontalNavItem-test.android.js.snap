// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`Android BpkHorizontalNavItem dark mode should render correctly 1`] = `
<View
  accessibilityLabel="Nav"
  accessibilityRole="button"
  accessible={true}
  focusable={true}
  nativeBackgroundAndroid={
    Object {
      "borderless": false,
      "color": -9934465,
      "rippleRadius": undefined,
      "type": "RippleAndroid",
    }
  }
  onClick={[Function]}
  onResponderGrant={[Function]}
  onResponderMove={[Function]}
  onResponderRelease={[Function]}
  onResponderTerminate={[Function]}
  onResponderTerminationRequest={[Function]}
  onStartShouldSetResponder={[Function]}
  style={
    Array [
      Object {
        "height": 33,
        "justifyContent": "center",
      },
    ]
  }
>
  <Text
    allowFontScaling={false}
    style={
      Array [
        Object {
          "color": "rgb(255, 255, 255)",
          "fontFamily": "sans-serif",
          "fontSize": 16,
          "fontWeight": "400",
          "letterSpacing": -0.2,
          "textAlign": "left",
        },
        Object {},
        Array [
          Object {
            "paddingHorizontal": 16,
          },
        ],
      ]
    }
  >
    NAV
  </Text>
</View>
`;

exports[`Android BpkHorizontalNavItem dark mode should render correctly with "disabled" prop 1`] = `
<View
  accessibilityLabel="Nav"
  accessibilityRole="button"
  accessible={true}
  focusable={false}
  nativeBackgroundAndroid={
    Object {
      "borderless": false,
      "color": -9934465,
      "rippleRadius": undefined,
      "type": "RippleAndroid",
    }
  }
  onClick={[Function]}
  onResponderGrant={[Function]}
  onResponderMove={[Function]}
  onResponderRelease={[Function]}
  onResponderTerminate={[Function]}
  onResponderTerminationRequest={[Function]}
  onStartShouldSetResponder={[Function]}
  style={
    Array [
      Object {
        "height": 33,
        "justifyContent": "center",
      },
    ]
  }
>
  <Text
    allowFontScaling={false}
    style={
      Array [
        Object {
          "color": "rgb(255, 255, 255)",
          "fontFamily": "sans-serif",
          "fontSize": 16,
          "fontWeight": "400",
          "letterSpacing": -0.2,
          "textAlign": "left",
        },
        Object {},
        Array [
          Object {
            "paddingHorizontal": 16,
          },
          Object {
            "color": "rgb(99, 99, 102)",
          },
        ],
      ]
    }
  >
    NAV
  </Text>
</View>
`;

exports[`Android BpkHorizontalNavItem dark mode should render correctly with "selected" prop 1`] = `
<View
  accessibilityLabel="Nav"
  accessibilityRole="button"
  accessible={true}
  focusable={false}
  nativeBackgroundAndroid={
    Object {
      "borderless": false,
      "color": -9934465,
      "rippleRadius": undefined,
      "type": "RippleAndroid",
    }
  }
  onClick={[Function]}
  onResponderGrant={[Function]}
  onResponderMove={[Function]}
  onResponderRelease={[Function]}
  onResponderTerminate={[Function]}
  onResponderTerminationRequest={[Function]}
  onStartShouldSetResponder={[Function]}
  style={
    Array [
      Object {
        "height": 33,
        "justifyContent": "center",
      },
    ]
  }
>
  <Text
    allowFontScaling={false}
    style={
      Array [
        Object {
          "color": "rgb(255, 255, 255)",
          "fontFamily": "sans-serif",
          "fontSize": 16,
          "fontWeight": "400",
          "letterSpacing": -0.2,
          "textAlign": "left",
        },
        Object {},
        Array [
          Object {
            "paddingHorizontal": 16,
          },
          Object {
            "color": "rgb(109, 159, 235)",
          },
        ],
      ]
    }
  >
    NAV
  </Text>
</View>
`;

exports[`Android BpkHorizontalNavItem light mode should render correctly 1`] = `
<View
  accessibilityLabel="Nav"
  accessibilityRole="button"
  accessible={true}
  focusable={true}
  nativeBackgroundAndroid={
    Object {
      "borderless": false,
      "color": null,
      "rippleRadius": undefined,
      "type": "RippleAndroid",
    }
  }
  onClick={[Function]}
  onResponderGrant={[Function]}
  onResponderMove={[Function]}
  onResponderRelease={[Function]}
  onResponderTerminate={[Function]}
  onResponderTerminationRequest={[Function]}
  onStartShouldSetResponder={[Function]}
  style={
    Array [
      Object {
        "height": 33,
        "justifyContent": "center",
      },
    ]
  }
>
  <Text
    allowFontScaling={false}
    style={
      Array [
        Object {
          "color": "rgb(17, 18, 54)",
          "fontFamily": "sans-serif",
          "fontSize": 16,
          "fontWeight": "400",
          "letterSpacing": -0.2,
          "textAlign": "left",
        },
        Object {},
        Array [
          Object {
            "paddingHorizontal": 16,
          },
        ],
      ]
    }
  >
    NAV
  </Text>
</View>
`;

exports[`Android BpkHorizontalNavItem light mode should render correctly with "disabled" prop 1`] = `
<View
  accessibilityLabel="Nav"
  accessibilityRole="button"
  accessible={true}
  focusable={false}
  nativeBackgroundAndroid={
    Object {
      "borderless": false,
      "color": null,
      "rippleRadius": undefined,
      "type": "RippleAndroid",
    }
  }
  onClick={[Function]}
  onResponderGrant={[Function]}
  onResponderMove={[Function]}
  onResponderRelease={[Function]}
  onResponderTerminate={[Function]}
  onResponderTerminationRequest={[Function]}
  onStartShouldSetResponder={[Function]}
  style={
    Array [
      Object {
        "height": 33,
        "justifyContent": "center",
      },
    ]
  }
>
  <Text
    allowFontScaling={false}
    style={
      Array [
        Object {
          "color": "rgb(17, 18, 54)",
          "fontFamily": "sans-serif",
          "fontSize": 16,
          "fontWeight": "400",
          "letterSpacing": -0.2,
          "textAlign": "left",
        },
        Object {},
        Array [
          Object {
            "paddingHorizontal": 16,
          },
          Object {
            "color": "rgb(178, 178, 191)",
          },
        ],
      ]
    }
  >
    NAV
  </Text>
</View>
`;

exports[`Android BpkHorizontalNavItem light mode should render correctly with "selected" prop 1`] = `
<View
  accessibilityLabel="Nav"
  accessibilityRole="button"
  accessible={true}
  focusable={false}
  nativeBackgroundAndroid={
    Object {
      "borderless": false,
      "color": null,
      "rippleRadius": undefined,
      "type": "RippleAndroid",
    }
  }
  onClick={[Function]}
  onResponderGrant={[Function]}
  onResponderMove={[Function]}
  onResponderRelease={[Function]}
  onResponderTerminate={[Function]}
  onResponderTerminationRequest={[Function]}
  onStartShouldSetResponder={[Function]}
  style={
    Array [
      Object {
        "height": 33,
        "justifyContent": "center",
      },
    ]
  }
>
  <Text
    allowFontScaling={false}
    style={
      Array [
        Object {
          "color": "rgb(17, 18, 54)",
          "fontFamily": "sans-serif",
          "fontSize": 16,
          "fontWeight": "400",
          "letterSpacing": -0.2,
          "textAlign": "left",
        },
        Object {},
        Array [
          Object {
            "paddingHorizontal": 16,
          },
          Object {
            "color": "rgb(7, 112, 227)",
          },
        ],
      ]
    }
  >
    NAV
  </Text>
</View>
`;

exports[`Android BpkHorizontalNavItem should render correctly with "small" prop 1`] = `
<View
  accessibilityLabel="Nav"
  accessibilityRole="button"
  accessible={true}
  focusable={true}
  nativeBackgroundAndroid={
    Object {
      "borderless": false,
      "color": null,
      "rippleRadius": undefined,
      "type": "RippleAndroid",
    }
  }
  onClick={[Function]}
  onResponderGrant={[Function]}
  onResponderMove={[Function]}
  onResponderRelease={[Function]}
  onResponderTerminate={[Function]}
  onResponderTerminationRequest={[Function]}
  onStartShouldSetResponder={[Function]}
  style={
    Array [
      Object {
        "height": 33,
        "justifyContent": "center",
      },
      Object {
        "height": 29,
      },
    ]
  }
>
  <Text
    allowFontScaling={false}
    style={
      Array [
        Object {
          "color": "rgb(17, 18, 54)",
          "fontFamily": "sans-serif",
          "fontSize": 14,
          "fontWeight": "400",
          "letterSpacing": 0,
          "textAlign": "left",
        },
        Object {},
        Array [
          Object {
            "paddingHorizontal": 16,
          },
        ],
      ]
    }
  >
    NAV
  </Text>
</View>
`;

exports[`Android BpkHorizontalNavItem should render correctly with "spaceAround" prop 1`] = `
<View
  accessibilityLabel="Nav"
  accessibilityRole="button"
  accessible={true}
  focusable={true}
  nativeBackgroundAndroid={
    Object {
      "borderless": false,
      "color": null,
      "rippleRadius": undefined,
      "type": "RippleAndroid",
    }
  }
  onClick={[Function]}
  onResponderGrant={[Function]}
  onResponderMove={[Function]}
  onResponderRelease={[Function]}
  onResponderTerminate={[Function]}
  onResponderTerminationRequest={[Function]}
  onStartShouldSetResponder={[Function]}
  style={
    Array [
      Object {
        "height": 33,
        "justifyContent": "center",
      },
    ]
  }
>
  <Text
    allowFontScaling={false}
    style={
      Array [
        Object {
          "color": "rgb(17, 18, 54)",
          "fontFamily": "sans-serif",
          "fontSize": 16,
          "fontWeight": "400",
          "letterSpacing": -0.2,
          "textAlign": "left",
        },
        Object {},
        Array [
          Object {
            "paddingHorizontal": 16,
          },
        ],
      ]
    }
  >
    NAV
  </Text>
</View>
`;

exports[`Android BpkHorizontalNavItem should render correctly with arbitrary props 1`] = `
<View
  accessibilityLabel="Nav"
  accessibilityRole="button"
  accessible={true}
  focusable={true}
  nativeBackgroundAndroid={
    Object {
      "borderless": false,
      "color": null,
      "rippleRadius": undefined,
      "type": "RippleAndroid",
    }
  }
  onClick={[Function]}
  onResponderGrant={[Function]}
  onResponderMove={[Function]}
  onResponderRelease={[Function]}
  onResponderTerminate={[Function]}
  onResponderTerminationRequest={[Function]}
  onStartShouldSetResponder={[Function]}
  style={
    Array [
      Object {
        "height": 33,
        "justifyContent": "center",
      },
    ]
  }
>
  <Text
    allowFontScaling={false}
    style={
      Array [
        Object {
          "color": "rgb(17, 18, 54)",
          "fontFamily": "sans-serif",
          "fontSize": 16,
          "fontWeight": "400",
          "letterSpacing": -0.2,
          "textAlign": "left",
        },
        Object {},
        Array [
          Object {
            "paddingHorizontal": 16,
          },
        ],
      ]
    }
  >
    NAV
  </Text>
</View>
`;

exports[`Android BpkHorizontalNavItem should render correctly with custom "style" prop 1`] = `
<View
  accessibilityLabel="Nav"
  accessibilityRole="button"
  accessible={true}
  focusable={true}
  nativeBackgroundAndroid={
    Object {
      "borderless": false,
      "color": null,
      "rippleRadius": undefined,
      "type": "RippleAndroid",
    }
  }
  onClick={[Function]}
  onResponderGrant={[Function]}
  onResponderMove={[Function]}
  onResponderRelease={[Function]}
  onResponderTerminate={[Function]}
  onResponderTerminationRequest={[Function]}
  onStartShouldSetResponder={[Function]}
  style={
    Array [
      Object {
        "height": 33,
        "justifyContent": "center",
      },
      Object {
        "marginBottom": 4,
      },
    ]
  }
>
  <Text
    allowFontScaling={false}
    style={
      Array [
        Object {
          "color": "rgb(17, 18, 54)",
          "fontFamily": "sans-serif",
          "fontSize": 16,
          "fontWeight": "400",
          "letterSpacing": -0.2,
          "textAlign": "left",
        },
        Object {},
        Array [
          Object {
            "paddingHorizontal": 16,
          },
        ],
      ]
    }
  >
    NAV
  </Text>
</View>
`;

exports[`Android BpkHorizontalNavItem should render item text correctly with custom "textStyle" prop 1`] = `
<View
  accessibilityLabel="Nav"
  accessibilityRole="button"
  accessible={true}
  focusable={true}
  nativeBackgroundAndroid={
    Object {
      "borderless": false,
      "color": null,
      "rippleRadius": undefined,
      "type": "RippleAndroid",
    }
  }
  onClick={[Function]}
  onResponderGrant={[Function]}
  onResponderMove={[Function]}
  onResponderRelease={[Function]}
  onResponderTerminate={[Function]}
  onResponderTerminationRequest={[Function]}
  onStartShouldSetResponder={[Function]}
  style={
    Array [
      Object {
        "height": 33,
        "justifyContent": "center",
      },
    ]
  }
>
  <Text
    allowFontScaling={false}
    style={
      Array [
        Object {
          "color": "rgb(17, 18, 54)",
          "fontFamily": "sans-serif",
          "fontSize": 16,
          "fontWeight": "400",
          "letterSpacing": -0.2,
          "textAlign": "left",
        },
        Object {},
        Array [
          Object {
            "paddingHorizontal": 16,
          },
          Object {
            "color": "rgb(255, 255, 255)",
          },
        ],
      ]
    }
  >
    NAV
  </Text>
</View>
`;

exports[`Android BpkHorizontalNavItem should support theming 1`] = `
<View
  accessibilityLabel="Nav"
  accessibilityRole="button"
  accessible={true}
  focusable={true}
  nativeBackgroundAndroid={
    Object {
      "borderless": false,
      "color": null,
      "rippleRadius": undefined,
      "type": "RippleAndroid",
    }
  }
  onClick={[Function]}
  onResponderGrant={[Function]}
  onResponderMove={[Function]}
  onResponderRelease={[Function]}
  onResponderTerminate={[Function]}
  onResponderTerminationRequest={[Function]}
  onStartShouldSetResponder={[Function]}
  style={
    Array [
      Object {
        "height": 33,
        "justifyContent": "center",
      },
    ]
  }
>
  <Text
    allowFontScaling={false}
    style={
      Array [
        Object {
          "color": "rgb(17, 18, 54)",
          "fontFamily": "sans-serif",
          "fontSize": 16,
          "fontWeight": "400",
          "letterSpacing": -0.2,
          "textAlign": "left",
        },
        Object {},
        Array [
          Object {
            "paddingHorizontal": 16,
          },
        ],
      ]
    }
  >
    NAV
  </Text>
</View>
`;
