// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`iOS BpkNavigationBarBackButtonIOS dark mode should render correctly 1`] = `
<RNGestureHandlerButton
  collapsable={false}
  onGestureEvent={[Function]}
  onGestureHandlerEvent={[Function]}
  onGestureHandlerStateChange={[Function]}
  onHandlerStateChange={[Function]}
  rippleColor={0}
>
  <View
    accessibilityLabel="Back"
    accessibilityRole="button"
    accessible={true}
    collapsable={false}
    style={
      Object {
        "alignItems": "center",
        "flexDirection": "row",
        "height": "100%",
        "opacity": 1,
        "zIndex": 2,
      }
    }
  >
    <Image
      source={1}
      style={
        Array [
          Array [
            Object {
              "marginEnd": 16,
            },
          ],
          Object {
            "tintColor": "rgb(255, 255, 255)",
          },
        ]
      }
    />
  </View>
</RNGestureHandlerButton>
`;

exports[`iOS BpkNavigationBarBackButtonIOS dark mode should render correctly with title 1`] = `
<RNGestureHandlerButton
  collapsable={false}
  onGestureEvent={[Function]}
  onGestureHandlerEvent={[Function]}
  onGestureHandlerStateChange={[Function]}
  onHandlerStateChange={[Function]}
  rippleColor={0}
>
  <View
    accessibilityLabel="Back"
    accessibilityRole="button"
    accessible={true}
    collapsable={false}
    style={
      Object {
        "alignItems": "center",
        "flexDirection": "row",
        "height": "100%",
        "opacity": 1,
        "zIndex": 2,
      }
    }
  >
    <Image
      source={1}
      style={
        Array [
          Array [
            Object {
              "marginEnd": 8,
            },
          ],
          Object {
            "tintColor": "rgb(255, 255, 255)",
          },
        ]
      }
    />
    <Text
      allowFontScaling={false}
      style={
        Array [
          Object {
            "color": "rgb(255, 255, 255)",
            "fontFamily": "System",
            "fontSize": 16,
            "fontWeight": "400",
            "letterSpacing": 0.12,
            "textAlign": "left",
          },
          Object {},
          Array [
            Object {
              "color": "rgb(255, 255, 255)",
            },
          ],
        ]
      }
    >
      Back
    </Text>
  </View>
</RNGestureHandlerButton>
`;

exports[`iOS BpkNavigationBarBackButtonIOS light mode should render correctly 1`] = `
<RNGestureHandlerButton
  collapsable={false}
  onGestureEvent={[Function]}
  onGestureHandlerEvent={[Function]}
  onGestureHandlerStateChange={[Function]}
  onHandlerStateChange={[Function]}
  rippleColor={0}
>
  <View
    accessibilityLabel="Back"
    accessibilityRole="button"
    accessible={true}
    collapsable={false}
    style={
      Object {
        "alignItems": "center",
        "flexDirection": "row",
        "height": "100%",
        "opacity": 1,
        "zIndex": 2,
      }
    }
  >
    <Image
      source={1}
      style={
        Array [
          Array [
            Object {
              "marginEnd": 16,
            },
          ],
          Object {
            "tintColor": "rgb(22, 22, 22)",
          },
        ]
      }
    />
  </View>
</RNGestureHandlerButton>
`;

exports[`iOS BpkNavigationBarBackButtonIOS light mode should render correctly with title 1`] = `
<RNGestureHandlerButton
  collapsable={false}
  onGestureEvent={[Function]}
  onGestureHandlerEvent={[Function]}
  onGestureHandlerStateChange={[Function]}
  onHandlerStateChange={[Function]}
  rippleColor={0}
>
  <View
    accessibilityLabel="Back"
    accessibilityRole="button"
    accessible={true}
    collapsable={false}
    style={
      Object {
        "alignItems": "center",
        "flexDirection": "row",
        "height": "100%",
        "opacity": 1,
        "zIndex": 2,
      }
    }
  >
    <Image
      source={1}
      style={
        Array [
          Array [
            Object {
              "marginEnd": 8,
            },
          ],
          Object {
            "tintColor": "rgb(22, 22, 22)",
          },
        ]
      }
    />
    <Text
      allowFontScaling={false}
      style={
        Array [
          Object {
            "color": "rgb(22, 22, 22)",
            "fontFamily": "System",
            "fontSize": 16,
            "fontWeight": "400",
            "letterSpacing": 0.12,
            "textAlign": "left",
          },
          Object {},
          Array [
            Object {
              "color": "rgb(22, 22, 22)",
            },
          ],
        ]
      }
    >
      Back
    </Text>
  </View>
</RNGestureHandlerButton>
`;

exports[`iOS BpkNavigationBarBackButtonIOS should forward custom props 1`] = `
<RNGestureHandlerButton
  collapsable={false}
  onGestureEvent={[Function]}
  onGestureHandlerEvent={[Function]}
  onGestureHandlerStateChange={[Function]}
  onHandlerStateChange={[Function]}
  rippleColor={0}
  testID="testid"
>
  <View
    accessibilityLabel="Back"
    accessibilityRole="button"
    accessible={true}
    collapsable={false}
    style={
      Object {
        "alignItems": "center",
        "flexDirection": "row",
        "height": "100%",
        "opacity": 1,
        "zIndex": 2,
      }
    }
  >
    <Image
      source={1}
      style={
        Array [
          Array [
            Object {
              "marginEnd": 16,
            },
          ],
          Object {
            "tintColor": "rgb(22, 22, 22)",
          },
        ]
      }
    />
  </View>
</RNGestureHandlerButton>
`;
